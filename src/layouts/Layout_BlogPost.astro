---
import { sanityClient } from 'sanity:client';
import LayoutDomaine from '../layouts/Layout-Domaine.astro';
import { blogCardFields, globalSectionsFields, imageBaseFields, imageFields, richContentFields, urlFor } from '../lib/cms-queries';
import SectionBlogFeed from '../components/global/sections/section-BlogFeed.astro';
import BlogPostBody from '../components/global/blog/blog-PostBody.astro';
import BlogPostHero from '../components/global/blog/blog-PostHero.astro';
import BlogPostAuthors from '../components/global/blog/blog-PostAuthors.astro';
import { getBlogPosts_Domaine } from '../lib/cms-content';
import BlogPostSidebar from '../components/global/blog/blog-Post-Sidebar.astro';
import GlobalSections from '../components/global/sections/section-GlobalSections.astro';
import { Translations } from '../lib/locales';
import { getCollection } from 'astro:content';
import { Brands } from '../enums/brands';
import LayoutStudio from './Layout-Studio.astro';

const { content, locale , brand} = Astro.props;

const blogPosts = brand === Brands.STUDIO ? await getCollection('blogPosts_Studio') : await getCollection('blogPosts_Domaine')

const relatedPosts = await sanityClient.fetch(`
    *[_type == "type_blog" 
        && agencyBrand->slug.current == "/" 
        && category->_id == '${content.category._id}' 
        && isHidden != true
    ]{${blogCardFields}} | order(orderRank asc)`)

const BrandLayout = brand === Brands.STUDIO ? LayoutStudio : LayoutDomaine
---
<BrandLayout
    title={content.metafields?.title ? content.metafields.title : content.title}
    description={content.metafields?.description ? content.metafields.description : null}
    image={content.metafields?.image ? urlFor(content.metafields.image).url() : null}
    searchFilter={content.isHidden ? "" : "type:blog-post_domaine"}
    activePath="/insights"
    noIndex={content.isHidden}
    showPreloader={false}
    locale={locale}
>
    <BlogPostHero
        post={content}
        locale={locale}
    />
    
    <BlogPostBody content={content.body} locale={locale}>
        <BlogPostSidebar 
            latestPosts={blogPosts.filter((post) => post.data.slug.current != content.slug.current).slice(0, 3)}
            locale={locale}
        />
    </BlogPostBody>

    { content.authors && 
        <BlogPostAuthors 
            authors={content.authors}
            locale={locale}
        />
    }

    {content.globalSections && content.globalSections.sections.map((section, i) => (
        <GlobalSections brand="domaine" section={section} key={i} locale={locale} />
    ))}

    <!-- { relatedPosts.length > 1 && 
        <SectionBlogFeed 
            heading={locale ? Translations['RELATED-POSTS'].locales[locale] : Translations['RELATED-POSTS'].name}
            posts={relatedPosts.filter((post) => post.slug.current != content.slug.current)}
            locale={locale}
        />
    } -->

    <!-- { relatedProjects?.length > 0 && 
        <SectionProjectsFeed
            heading="Related Projects"
            projects={relatedProjects}
        />
    } -->
</BrandLayout>