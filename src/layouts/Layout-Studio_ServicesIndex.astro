---
import LayoutStudio from "../layouts/Layout-Studio.astro";
import SectionServiceLandingHero from "../components/studio/sections/services/services-Hero.astro";
import GlobalSections from "../components/global/sections/section-GlobalSections.astro";
import GlobalSectionsList from "../components/global/sections/section-GlobalSectionsList.astro";
import { getTranslationString } from "../lib/translations";
import { loadQuery } from "../lib/sanity-load-query";
import { imageFields, globalSectionsFields, imageBaseFields } from "../lib/cms-queries";
import { Brands } from "../enums/brands";

const { data: pageSettings} = await loadQuery({ 
  query: `*[_type == "page_services-index-studio"][0]{
    title,
    heading,
    images[]{${imageFields}},
    metafields{ title, description, image{${imageBaseFields}} },
  }`
})
const { locale } = Astro.props
---
<LayoutStudio
    title={pageSettings.metafields?.title ? pageSettings.metafields.title : getTranslationString(pageSettings.title, locale)}
    description={pageSettings.metafields?.description ? pageSettings.metafields.description : null}
    image={pageSettings.metafields?.image ? pageSettings.metafields.image : null}
    showPreloader={false}
    activePath="/studio/services"
    locale={locale}
>   
    <SectionServiceLandingHero 
        title={pageSettings.title}
        excerpt={pageSettings.heading}
        images={pageSettings.images}
        locale={locale}
    />

    {pageSettings.sections && pageSettings.sections.map((section, i) => (
        <GlobalSections brand="studio" section={section} key={i} locale={locale} />
    ))}
    <GlobalSectionsList
      brand={Brands.STUDIO}
      locale={locale}
    />
</LayoutStudio>