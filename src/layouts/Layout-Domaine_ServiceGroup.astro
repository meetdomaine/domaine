---
import LayoutDomaine from "../layouts/Layout-Domaine.astro"
import SectionServiceHero from "../components/global/services/service-Hero.astro"
import { getCollection } from "astro:content"
import SectionBlogFeed from "../components/global/sections/section-BlogFeed.astro"
import SectionProjectsFeed from "../components/global/sections/section-ProjectsFeed.astro"
import { getTranslationString } from "../lib/translations"
import SectionGlobalSections from "../components/global/sections/section-GlobalSections.astro"


const { content, serviceType, serviceGroup, locale } = Astro.props;


// const allProjects = await getCollection('projects_Domaine')
// const relatedProjects = allProjects.filter((project) => project.data.services?.some((projectService) => projectService.slug.current === serviceGroup ))

// const allBlogPosts = await getCollection('blogPosts_Domaine')
// const relatedBlogPosts = allBlogPosts.filter((post) => post.data.services?.some((postService) => postService.slug.current === serviceGroup ))
// console.log(content.pageSectionsDomaine?.sections.filter((section) => section._type === 'section_textMedia').map((section) => section.media.image))
---
<LayoutDomaine
    title={content.metafields && content.metafields.title ? content.metafields.title : getTranslationString(content.title, locale)}
    searchFilter="type:service-group"
    activePath="/services"
    showPreloader={true}
>
    <SectionServiceHero
        title={content.title}
        excerpt={content.excerpt}
        description={content.description}
        subservices={content.services}
        breadcrumbs={[
          {
              title: 'Services /',
              url: '/services/'
          },
          {
              title: serviceType.title,
              url: `/services/${serviceType.slug.current}`
          },
        ]}
        locale={locale}
    />

    <!-- {relatedBlogPosts && relatedBlogPosts.length > 2 &&
        <SectionBlogFeed 
            heading={content.title}
            posts={relatedBlogPosts}
            locale={locale}
        />
    }

    {relatedProjects.length > 1 &&
        <SectionProjectsFeed 
            heading={content.title}
            projects={relatedProjects}
            sidebarTitle={content.title}
            locale={locale}
        />
    } -->

  {content.pageSectionsDomaine?.sections?.map((section, i) => (
    <SectionGlobalSections brand="domaine" section={section} key={i} locale={locale} />
  ))}

</LayoutDomaine>

<style>
    .services {
        padding-inline: var(--page-margin);
        padding-block: var(--space-lg);
    }
</style>