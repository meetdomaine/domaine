---
import LayoutDomaine from "../layouts/Layout-Domaine.astro"
import SectionServiceTypeHero from "../components/global/services/serviceType-Hero.astro"
import SectionProjectsFeed from "../components/global/sections/section-ProjectsFeed.astro"
import SectionBlogFeed from "../components/global/sections/section-BlogFeed.astro"
import GlobalSections from "../components/global/sections/section-GlobalSections.astro"
import { getLocaleString, getTranslationString } from "../lib/translations"
import { Translations } from "../lib/locales"
import { Brands } from "../enums/brands"
import LayoutStudio from "./Layout-Studio.astro"
import SectionForm from "../components/global/sections/section-Form.astro"
import { projectGridFields } from "../lib/cms-queries"
import { blogCardFields } from "../lib/cms-queries"
import { sanityClient } from "sanity:client"

const { content, locale, brand, activePath } = Astro.props;

const BrandLayout = brand === Brands.STUDIO ? LayoutStudio : LayoutDomaine
const relatedProjects = await sanityClient.fetch(`*[_type == "type_project" && agencyBrand->name == '${brand}' && isHidden != true && '${content.slug.current}' in services[]->serviceGroup->serviceType->slug.current ]{ "id": slug.current, "data":{${projectGridFields}} } | order(data.orderRank)`)
const relatedPosts = await sanityClient.fetch(`*[_type == "type_blog" && agencyBrand->name == '${brand}' && isHidden != true && '${content.slug.current}' in services[]->serviceGroup->serviceType->slug.current ]{ "id": slug.current, "data":{${blogCardFields}} }|order(data.postDate desc)`)
---
<BrandLayout
    title={`${content.metafields?.title ? getTranslationString(content.metafields.title, locale) : getTranslationString(content.title, locale)} | ${locale ? Translations.SERVICES.locales[locale] : Translations.SERVICES.name}`}
    description={content.metafields?.description ? getTranslationString(content.metafields.description, locale) : getTranslationString(content.description, locale)}
    activePath={activePath}
    showPreloader={true}
    locale={locale}
>
    <SectionServiceTypeHero
        serviceType={content}
        locale={locale}
        brand={brand}
    />
    
    <!-- {content.pageSectionsDomaine?.map((section, i) => (
        <GlobalSections brand="domaine" section={section} key={i} locale={locale} brand={brand} />
    ))} -->
    {brand === Brands.DOMAINE && content.pageSectionsDomaine?.map((section, i) => (
        <GlobalSections brand={brand} section={section} key={i} locale={locale} />
      ))}
    
    {brand === Brands.STUDIO && content.pageSectionsStudio?.map((section, i) => (
        <GlobalSections brand={brand} section={section} key={i} locale={locale} />
    ))}

    {relatedProjects?.length > 0 &&
        <SectionProjectsFeed 
            heading={`${getTranslationString(content.title, locale)} ${getLocaleString("WORK")}`}
            projects={relatedProjects}
        />
    }

    {content.hubspotFormId &&
      <SectionForm 
        key="serviceType_form"
        hubspotFormId={content.hubspotFormId}
        heading={content.formHeading}
        text={content.formText}
      />
    }

    {relatedPosts?.length > 2 &&
        <SectionBlogFeed 
            heading={`${getTranslationString(content.title, locale)} ${getLocaleString("INSIGHTS")}`}
            posts={relatedPosts}
            sidebarTitle={content.title}
        />
    }

</BrandLayout>