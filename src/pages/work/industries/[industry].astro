---
// SERVER RENDERED AT LOAD TIME
import LayoutProjectsIndex from '../../../layouts/Layout_ProjectsIndex.astro';
import { Brands } from '../../../enums/brands';
import { imageBaseFields, projectGridFields } from '../../../lib/cms-queries';
import { sanityClient } from 'sanity:client';
import { getCollection } from 'astro:content';

const { industry } = Astro.params
const industryContent = await sanityClient.fetch(`*[_type == "type_industry" && defined(*[_type == "type_project" && agencyBrand->name == '${Brands.DOMAINE}' && references(^._id)][0]) && slug.current == '${industry}'][0]{ 
    ...,
    "hasContent": {
      "${Brands.DOMAINE}": defined(*[_type == "type_project" && isHidden != true && agencyBrand->name == '${Brands.DOMAINE}' && references(^._id)][0]),
    },
    excerpt,
    "projects": *[_type == "type_project" && agencyBrand->name == '${Brands.DOMAINE}' && isHidden != true && industry->slug.current == ^.slug.current ]{ slug } | order(orderRank),
    metafields{ title, description, image{${imageBaseFields}} },
  }`
)
if (!industryContent) return Astro.redirect('/404')

const projectSlugs = new Set(industryContent.projects.map(project => project.slug.current))
const projects = await getCollection('projectCards', ({ data }) => projectSlugs.has(data.slug.current))
---
<LayoutProjectsIndex
    content={industryContent}
    projects={projects.map(project => project.data)}
    currentPath={`/industries/${industryContent?.slug?.current}`}
    brand={Brands.DOMAINE}
/>