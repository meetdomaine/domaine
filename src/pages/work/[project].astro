---
import { sanityClient } from 'sanity:client'
import LayoutDomaine from '../../layouts/Layout-Domaine.astro';
import { paths } from '../../components/global/utils/paths';
import WorkPostHero from '../../components/domaine/sections/work/workPost-Hero.astro';
import { imageFields, projectGridFields, projectPageFields } from '../../components/global/utils/cms-queries';
import { projectPostQuery } from "../../components/global/utils/cms-queries"
import WorkPostAbout from '../../components/global/projects/workPost-About.astro';
import WorkPostDetails from '../../components/global/projects/workPost-Details.astro';
import GlobalSections from '../../components/global/sections/section-GlobalSections.astro';

interface Props {
    content: any
}

export async function getStaticPaths() {
    const projects = await sanityClient.fetch(`*[_type == "type_project" && agencyBrand->slug.current == 'domaine' ]{ ${projectPageFields} }`)
    return projects.map((project) => {
        return {
            params: { project: project.slug.current },
            props: { content: project }
        }
    })
}

const { content } = Astro.props
---
<LayoutDomaine
    title={content.title}
    backgroundColor={content.backgroundColor && content.backgroundColor.hex}
    foregroundColor={content.foregroundColor}
    searchFilter="type:case-study"
>
    <WorkPostHero
        title={content.title}
        heroMedia={content.heroMedia}
        accentColor={content.accentColor}
    />

    <WorkPostAbout
        description={content.description}
        industry={content.industry}
        client={content.client}
        agencyBrand="domaine"
    />

    {content.sections && content.sections.map((section, i) => (
        <GlobalSections brand="domaine" section={section} key={i} />
    ))}

    <WorkPostDetails
        heading={content.title}
        description={content.description}
        industry={content.industry}
        root={paths.root.projects.path}
        url={content.url}
        client={content.client}
        services={content.services}
        features={content.features}
        partners={content.partners}
        metrics={content.metrics}
        awards={content.awards}
        heroMedia={content.heroMedia}
        metafields={content.metafields}
    />
</LayoutDomaine>

