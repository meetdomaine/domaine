---
import Layout from '../../layouts/Layout.astro';
import { getProjects, urlFor } from '../../utils/sanityClient';
import ProjectInfo from '../../components/sections/work/workPost/WorkPost_Info.astro';
import SectionBlock from '../../components/sections/SectionBlock.astro'
import ProjectHero from '../../components/sections/work/workPost/WorkPost_Hero.astro';
import Work from '../../components/sections/global/Work.astro';
import { getRelatedProjects } from '../../utils/sanityClient';


interface Props {
	data: any
}

export async function getStaticPaths() {

  const projects = await getProjects();

  return projects.map((project) => {
    return {
      params: { slug: project.slug.current },
      props: { data: project }
    }
  })
}

const { slug } = Astro.params;
const { data } = Astro.props;
// console.log(data)

const relatedProjectsCount = 3
const allRelatedProjects = await getRelatedProjects(data)
const relatedProjects = allRelatedProjects.slice(0, relatedProjectsCount)
---

<Layout
  theme="light"
  title={data.title}
  description={data.metaDescription ? data.metaDescription : data.description}
  image={data.metaImage && urlFor(data.metaImage).url()}
>
  <ProjectHero
    title={data.title}
    image={data.mainImage}
  />
  <ProjectInfo 
    excerpt={data.excerpt}
    description={data.description}
    link={data.url}
    tags={data.tags}
  />
    {data.content ? data.content.map((block, i) => (
      <SectionBlock block={block} key={i} />
    )) : ''}

    <!-- <RelatedProjects 
      project={data}
    /> -->

    <Work
      heading="Related Work"
      relatedProjects={relatedProjects}
    />

</Layout>