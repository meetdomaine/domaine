---
import { sanityClient } from 'sanity:client';
import LayoutDomaineProjects from '../../../layouts/Layout-Domaine-ProjectsIndex.astro';
import { blogCardFields, projectGridFields } from '../../../components/global/utils/cms-queries';
import { allProjects_Domaine } from '../../../components/global/utils/cms-content';

export async function getStaticPaths() {
    const serviceGroup = await sanityClient.fetch(`*[_type == "type_serviceGroup" && "domaine" in agencyBrands[]->slug.current ]{..., "relatedBlogPosts": *[_type=='type_blog' && ^._id in services[]->serviceGroup._ref ]{${blogCardFields} } | order(postDate)}`)
    return serviceGroup.map((serviceGroup) => {
        return {
            params: { serviceGroup: serviceGroup.slug.current },
            props: { content: serviceGroup }
        }
    })
}

interface Props {
    content: any
}

const { content } = Astro.props
const projects = allProjects_Domaine.filter((project) => project.services && project.services.some((service) => service.serviceGroup._id === content._id ))
---
<LayoutDomaineProjects 
    title={ `Work | ${content.metafields && content.metafields.title ? content.metafields.title : content.title}`}
    description={content.metafields && content.metafields.description ? content.metafields.description : null}
    searchFilter="type:project-service-group"
    heading={content.title}
    subheading={content.excerpt}
    projects={projects}
    currentPath={`/services/${content.slug.current}`}
    relatedBlogPosts={content.relatedBlogPosts}
>
</LayoutDomaineProjects>