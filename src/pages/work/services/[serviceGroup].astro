---
import LayoutDomaineProjects from '../../../layouts/Layout-Domaine-ProjectsIndex.astro';
import { getProjects_Domaine, getServiceGroups_Domaine } from '../../../components/global/utils/cms-content';
import { imageBaseFields, imageFields, serviceQuery, urlFor } from '../../../components/global/utils/cms-queries';

export const prerender = true

export async function getStaticPaths() {
    const serviceGroup = await sanityClient.fetch(`*[_type == "type_serviceGroup" && "/" in agencyBrands[]->slug.current]{
        ..., 
        isHidden,
        excerpt,
        images[]{${imageFields}},
        agencyBrands[]->{..., slug, name},
        serviceType->{..., formHeading, formText, hubspotFormId },
        "services": *[_type == "type_service" && references(^._id)]{..., ${serviceQuery} } | order(orderRank),
        metafields{ title, description, image{${imageBaseFields}} },
    }`)
    return serviceGroup.map((serviceGroup) => {
        return {
            params: { serviceGroup: serviceGroup.slug.current },
            props: { content: serviceGroup }
        }
    })
}

interface Props {
    content: any
}

const { content } = Astro.props
const allProjects = await getProjects_Domaine()
const projects = allProjects.filter((project) => project.services && project.services.some((service) => service.serviceGroup._id === content._id ))
---
<LayoutDomaineProjects 
    title={ `${content.metafields && content.metafields.title ? content.metafields.title : content.title} | Work`}
    description={content.metafields?.description ? content.metafields.description : null}
    image={content.metafields?.image ? urlFor(content.metafields.image).url() : null}
    searchFilter="type:project-service-group"
    heading={content.title}
    subheading={content.excerpt}
    projects={projects}
    currentPath={`/services/${content.slug.current}`}
    relatedBlogPosts={content.relatedBlogPosts}
>
</LayoutDomaineProjects>