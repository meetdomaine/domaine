---
import LayoutDomaine from "../../../layouts/Layout-Domaine.astro"
import SectionServiceHero from "../../../components/global/services/service-Hero.astro"
import SectionProjectsFeed from "../../../components/global/sections/section-ProjectsFeed.astro"
import SectionBlogFeed from "../../../components/global/sections/section-BlogFeed.astro"
import { getServices_Domaine } from "../../../components/global/utils/cms-content"
import SectionForm from "../../../components/global/sections/section-Form.astro"
import { blogCardFields, projectGridFields } from "../../../components/global/utils/cms-queries"

// export const prerender = true

export async function getStaticPaths() {
    const services = await getServices_Domaine()
    return services.map((service) => {
        return {
            params: { serviceType: service.serviceGroup.serviceType.slug.current, service: service.slug.current },
            props: { content: service, serviceGroup: service.serviceGroup, serviceType: service.serviceGroup.serviceType }
        }
    })
}

interface Props {
    content: any,
    serviceType: any,
    serviceGroup: any,
}

const { content, serviceType } = Astro.props;

const relatedProjects = await sanityClient.fetch(`
    *[ _type == "type_project"
        && references('${content._id}')
        && isHidden != true
    ]{${projectGridFields}} | order(orderRank)`)

const relatedBlogPosts = await sanityClient.fetch(`
    *[ _type == "type_blog"
        && references('${content._id}')
        && isHidden != true
    ]{${blogCardFields}} | order(orderRank)`)
---
<LayoutDomaine
    title={content.metafields && content.metafields.title ? content.metafields.title : content.title}
    searchFilter="type:service"
    activePath="/services"
>
    <SectionServiceHero
        title={content.title}
        excerpt={content.excerpt}
        description={content.description}
        breadcrumbs={[
            {
                title: 'Services /',
                url: '/services/'
            },
            {
                title: serviceType.title,
                url: `/services/${serviceType.slug.current}`
            },
        ]}
    />

    {relatedBlogPosts && relatedBlogPosts.length > 2 &&
        <SectionBlogFeed 
            heading={`${content.title} Insights`}
            posts={relatedBlogPosts}
        />
    }

    {relatedProjects.length > 1 &&
        <SectionProjectsFeed 
            heading={`${content.title} Work`}
            projects={relatedProjects}
            sidebarTitle={content.title}
        />
    }

    {serviceType.formHeading && serviceType.hubspotFormId &&
        <SectionForm 
            heading={serviceType.formHeading}
            text={serviceType.formText}
            hubspotFormId={serviceType.hubspotFormId}
        />
    }

</LayoutDomaine>