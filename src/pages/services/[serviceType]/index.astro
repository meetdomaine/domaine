---
import { sanityClient } from "sanity:client"
import LayoutDomaine from "../../../layouts/Layout-Domaine.astro"
import SectionServiceTypeHero from "../../../components/global/services/serviceType-Hero.astro"
import { blogCardFields, projectGridFields, serviceTypePageQuery } from "../../../components/global/utils/cms-queries"
import SectionProjectsFeed from "../../../components/global/sections/section-ProjectsFeed.astro"
import SectionBlogFeed from "../../../components/global/sections/section-BlogFeed.astro"
import GlobalSections from "../../../components/global/sections/section-GlobalSections.astro"
import SectionForm from "../../../components/global/sections/section-Form.astro"

export const prerender = true

export async function getStaticPaths() {
    const serviceTypes = await sanityClient.fetch(`*[_type == "type_serviceType" && 'Domaine' in agencyBrands[]->name ]{..., ${serviceTypePageQuery}} | order(orderRank)`)
    return serviceTypes.map((serviceType) => {
        return {
            params: { serviceType: serviceType.slug.current },
            props: { content: serviceType }
        }
    })
}

interface Props {
    content: any,
}

const { content } = Astro.props;
// console.log(content)

const relatedProjects = await sanityClient.fetch(`
    *[ _type == "type_project"
        && '${content._id}' in services[]->serviceGroup->serviceType._ref
    ]{${projectGridFields}} | order(orderRank)`)

const relatedBlogPosts = await sanityClient.fetch(`
    *[ _type == "type_blog"
        && '${content._id}' in services[]->serviceGroup->serviceType._ref
    ]{${blogCardFields}} | order(orderRank)`)

---
<LayoutDomaine
    title={content.metafields && content.metafields.title ? content.metafields.title : content.title}
    searchFilter="type:service-type"
    activePath="/services"
    showPreloader={true}
>
    <SectionServiceTypeHero
        serviceType={content}
    />
    
    {content.pageSectionsDomaine && content.pageSectionsDomaine.map((section, i) => (
        <GlobalSections brand="domaine" section={section} key={i} />
    ))}

    {relatedBlogPosts && relatedBlogPosts?.length > 2 &&
        <SectionBlogFeed 
            heading={`${content.title} Insights`}
            posts={relatedBlogPosts}
            sidebarTitle={content.title}
        />
    }

    {content.formHeading && content.hubspotFormId &&
        <SectionForm 
            heading={content.formHeading}
            text={content.formText}
            hubspotFormId={content.hubspotFormId}
        />
    }

    {relatedProjects?.length > 0 &&
        <SectionProjectsFeed 
            heading={`${content.title} Work`}
            projects={relatedProjects}
        />
    }

</LayoutDomaine>