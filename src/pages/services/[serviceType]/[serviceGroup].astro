---
import LayoutDomaine from "../../../layouts/Layout-Domaine.astro"
import SectionServiceHero from "../../../components/global/services/service-Hero.astro"
import SectionBlogFeed from "../../../components/global/sections/section-BlogFeed.astro"
import { getServiceGroups_Domaine } from "../../../components/global/utils/cms-content"
import SectionProjectsFeed from "../../../components/global/sections/section-ProjectsFeed.astro"
import SectionForm from "../../../components/global/sections/section-Form.astro"
import { blogCardFields, projectGridFields } from "../../../components/global/utils/cms-queries"


export async function getStaticPaths() {
    const serviceGroups = await getServiceGroups_Domaine()
    return serviceGroups.map((serviceGroup) => {
        return {
            params: { serviceType: serviceGroup.serviceType.slug.current, serviceGroup: serviceGroup.slug.current },
            props: { content: serviceGroup, serviceType: serviceGroup.serviceType }
        }
    })
}


interface Props {
    content: any,
    serviceType: any,
}

const { content, serviceType } = Astro.props;
// console.log(serviceType)

const relatedProjects = await sanityClient.fetch(`
    *[ _type == "type_project"
        && '${content._id}' in services[]->serviceGroup._ref
    ]{${projectGridFields}} | order(orderRank)`)

const relatedBlogPosts = await sanityClient.fetch(`
    *[ _type == "type_blog"
        && '${content._id}' in services[]->serviceGroup._ref
    ]{${blogCardFields}} | order(orderRank)`)

---
<LayoutDomaine
    title={content.metafields && content.metafields.title ? content.metafields.title : content.title}
    searchFilter="type:service-group"
    activePath="/services"
>
    <SectionServiceHero
        subservices={content.services}
        title={content.title}
        excerpt={content.excerpt}
        description={content.description}
        breadcrumbs={[
            {
                title: 'Services /',
                url: '/services/'
            },
            {
                title: serviceType.title,
                url: `/services/${serviceType.slug.current}`
            },
        ]}
    />

    {relatedBlogPosts && relatedBlogPosts.length > 2 &&
        <SectionBlogFeed 
            heading={`${content.title} Insights`}
            posts={relatedBlogPosts}
            sidebarTitle={content.title}
        />
    }

    {relatedProjects && relatedProjects.length > 0 &&
        <SectionProjectsFeed 
            heading={`${content.title} Work`}
            projects={relatedProjects}
        />
    }

    {serviceType.formHeading && serviceType.hubspotFormId &&
        <SectionForm 
            heading={serviceType.formHeading}
            text={serviceType.formText}
            hubspotFormId={serviceType.hubspotFormId}
        />
    }


</LayoutDomaine>

<style>
    .services {
        padding-inline: var(--page-margin);
        padding-block: var(--space-lg);
    }
</style>