---
import { sanityClient } from "sanity:client"
import LayoutDomaine from "../../../layouts/Layout-Domaine.astro"
import { paths } from "../../../components/global/utils/paths"
import SectionServiceGroupHero from "../../../components/global/services/section-ServiceGroup-Hero.astro"
import SectionProjectsFeed from "../../../components/global/sections/section-ProjectsFeed.astro"
import { blogCardFields, projectGridFields } from "../../../components/global/utils/cms-queries"
import GlobalProjectsGrid from "../../../components/global/projects/global-ProjectsGrid.astro"
import SectionBlogFeed from "../../../components/global/sections/section-BlogFeed.astro"

export async function getStaticPaths() {
    const serviceGroups = await sanityClient.fetch(`
        *[_type == "type_serviceGroup" 
            && "domaine" in agencyBrands[]->slug.current ] {
                ..., 
                serviceType->{...},
                "services": *[_type == "type_service" && references(^._id)] | order(orderRank),
                "projects": *[_type == "type_project" && ^._id in services[]->serviceGroup._ref ]{${projectGridFields}} | order(orderRank),
                "blogPosts": *[_type == "type_blog" && ^._id in services[]->serviceGroup._ref ]{${blogCardFields}} | order(postDate),
            } | order(orderRank)
        `)
    return serviceGroups.map((serviceGroup) => {
        return {
            params: { serviceType: serviceGroup.serviceType.slug.current, serviceGroup: serviceGroup.slug.current },
            props: { content: serviceGroup, serviceType: serviceGroup.serviceType }
        }
    })
}


interface Props {
    content: any,
    serviceType: any,
}

const { content, serviceType } = Astro.props;
---
<LayoutDomaine
    title={content.metafields && content.metafields.title ? content.metafields.title : content.title}
    searchFilter="type:service-group"
    activePath="/services"
>
    <SectionServiceGroupHero 
        serviceGroup={content}
    />
    <div class="services">
        {content.services.map((service) => (
            <div>
                <a href={`/services/${serviceType.slug.current}/${service.slug.current}`}><p>{service.title}</p></a>
            </div>
        ))}
    </div>

    {content.blogPosts && content.blogPosts.length > 0 &&
        <SectionBlogFeed 
            heading={`${content.title} Insights`}
            posts={content.blogPosts}
        />
    }

    {content.projects && content.projects.length > 0 &&
        <GlobalProjectsGrid 
            heading={`${content.title} Work`}
            projects={content.projects}
        />
    }
</LayoutDomaine>

<style>
    .services {
        padding-inline: var(--page-margin);
        padding-block: var(--space-lg);
    }
</style>