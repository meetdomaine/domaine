---
import { sanityClient } from "sanity:client"
import LayoutDomaine from "../../../layouts/LayoutDomaine.astro"
import { paths } from "../../../components/global/utils/paths"

export async function getStaticPaths() {
    const serviceGroups = await sanityClient.fetch(`*[_type == "type_serviceGroup" && "Domaine" in agencyBrands[]->name ] {..., serviceType->{...}} | order(orderRank)`)
    return serviceGroups.map((serviceGroup) => {
        console.log(serviceGroup.serviceType.slug)
        return {
            params: { serviceType: serviceGroup.serviceType.slug.current, serviceGroup: serviceGroup.slug.current },
            props: { content: serviceGroup, serviceType: serviceGroup.serviceType }
        }
    })
}


interface Props {
    content: any,
    serviceType: any,
}

const { content, serviceType } = Astro.props;
const services = await sanityClient.fetch(`*[_type == "type_service" && serviceGroup->_id == '${content._id}' && "Domaine" in agencyBrands[]->name] | order(orderRank)`)

---
<LayoutDomaine
    title={content.metafields && content.metafields.title ? content.metafields.title : content.title}
>
    <a href={`${paths.root.services.path}/${serviceType.slug.current}`}><h3>{serviceType.title}</h3></a>
    <h1 data-pagefind-filter="type:service-group">{content.title}</h1>
    {services.map((service) => (
        <div>
            <a href={`${paths.root.services.path}/${serviceType.slug.current}/${service.slug.current}`}><p>{service.title}</p></a>
        </div>
    ))}

</LayoutDomaine>