---
import LayoutDomaine from "../../../layouts/Layout-Domaine.astro"
import SectionServiceGroupHero from "../../../components/global/services/serviceGroup-Hero.astro"
import GlobalProjectsGrid from "../../../components/global/projects/global-ProjectsGrid.astro"
import SectionBlogFeed from "../../../components/global/sections/section-BlogFeed.astro"
import { allServiceGroups_Domaine } from "../../../components/global/utils/cms-content"

export async function getStaticPaths() {
    const serviceGroups = allServiceGroups_Domaine
    return serviceGroups.map((serviceGroup) => {
        return {
            params: { serviceType: serviceGroup.serviceType.slug.current, serviceGroup: serviceGroup.slug.current },
            props: { content: serviceGroup, serviceType: serviceGroup.serviceType }
        }
    })
}


interface Props {
    content: any,
    serviceType: any,
}

const { content, serviceType } = Astro.props;
---
<LayoutDomaine
    title={content.metafields && content.metafields.title ? content.metafields.title : content.title}
    searchFilter="type:service-group"
    activePath="/services"
>
    <SectionServiceGroupHero 
        serviceGroup={content}
    />
    <div class="services">
        {content.services.map((service) => (
            <div>
                <a href={`/services/${serviceType.slug.current}/${service.slug.current}`}><p>{service.title}</p></a>
            </div>
        ))}
    </div>

    {content.relatedBlogPosts && content.relatedBlogPosts.length > 0 &&
        <SectionBlogFeed 
            heading={`${content.title} Insights`}
            posts={content.relatedBlogPosts}
        />
    }

    {content.relatedProjects && content.relatedProjects.length > 0 &&
        <GlobalProjectsGrid 
            heading={`${content.title} Work`}
            projects={content.relatedProjects}
        />
    }
</LayoutDomaine>

<style>
    .services {
        padding-inline: var(--page-margin);
        padding-block: var(--space-lg);
    }
</style>