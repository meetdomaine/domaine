---
// SERVER RENDERED
import LayoutService from '../../../../layouts/Layout_Service.astro';
import { Brands } from '../../../../enums/brands';
import { sanityClient } from 'sanity:client';
import { globalSectionsFields } from '../../../../lib/cms-queries';
import { imageBaseFields } from '../../../../lib/cms-queries';

const { service, service_group, service_type } = Astro.params

const [ serviceType, serviceGroup, serviceContent ] = await Promise.all([
  sanityClient.fetch(`*[_type == "type_serviceType" && '${Brands.DOMAINE}' in agencyBrands[]->name && slug.current == '${service_type}'][0]{ slug }`),
  sanityClient.fetch(`*[_type == "type_serviceGroup" && '${Brands.DOMAINE}' in agencyBrands[]->name && slug.current == '${service_group}'][0]{ slug }`),
  sanityClient.fetch(`*[_type == "type_service" && '${Brands.DOMAINE}' in agencyBrands[]->name && slug.current == '${service}'][0]{
    _id,
    title,
    slug,
    isHidden,
    excerpt,
    description,
    formHeading,
    formText,
    hubspotFormId,
    orderRank,
    agencyBrands[]->{ _id, name, slug },
    serviceGroup->{
        _id,
        title,
        slug,
        formHeading,
        formText,
        hubspotFormId,
        serviceType->{
            _id,
            title,
            slug,
            formHeading,
            formText,
            hubspotFormId
        }
    },
    pageSectionsDomaine[]{${globalSectionsFields}},
    metafields{ title, description, image{${imageBaseFields}} },
  }`)
])
if (!serviceContent || !serviceGroup || !serviceType) return Astro.redirect('/404')
---
<LayoutService 
    content={serviceContent}
    brand={Brands.DOMAINE}
    activePath="/services"
/>
