---
import { sanityClient } from "sanity:client";
import { paths } from "../../../components/global/utils/paths";
import LayoutStudio from "../../../layouts/LayoutStudio.astro";

const serviceTypes = await sanityClient.fetch('*[_type == "type_serviceType" && "Studio" in agencyBrands[]->name ] | order(orderRank)')
const servicesObject = await Promise.all(
    serviceTypes.map(async serviceType => {
        const groups = await sanityClient.fetch(`*[_type == "type_serviceGroup" && serviceType->_id == '${serviceType._id}' && "Studio" in agencyBrands[]->name ] | order(orderRank)`)
        const groupedServices = Promise.all(groups.map(async serviceGroup => {
            const services = await sanityClient.fetch(`*[_type == "type_service" && serviceGroup->_id == '${serviceGroup._id}' && "Studio" in agencyBrands[]->name] | order(orderRank)`)
            serviceGroup.services = await services
            return serviceGroup
        }))
        serviceType.serviceGroups = await groupedServices
        return serviceType
    })
);
---
<LayoutStudio
    title="Services"
>   
    <h1 data-pagefind-filter="type:page">Studio Services Landing</h1>
    {servicesObject.map((serviceType) => (
        <div>
            <a href={`${paths.root.studio.services.path}/${serviceType.slug.current}`}><h3>{serviceType.title}</h3></a>
            {serviceType.serviceGroups.map((serviceGroup) => {
                return (
                    <div>
                        <a href={`${paths.root.studio.services.path}/${serviceType.slug.current}/${serviceGroup.slug.current}`}><h5>{serviceGroup.title}</h5></a>
                        {serviceGroup.services.map((service) => (
                            <a href={`${paths.root.studio.services.path}/${serviceType.slug.current}/${service.slug.current}`}><p>{service.title}</p></a>
                        ))}
                    </div>
                )
            }
        )}
        </div>
    ))}
</LayoutStudio>