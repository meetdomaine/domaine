---
// SERVER RENDERED AT LOAD TIME
import LayoutBlogPost from '../../../layouts/Layout_BlogPost.astro';
import { Brands } from '../../../enums/brands';
import { Locales } from '../../../enums/locales';
import { sanityClient } from 'sanity:client';
import { imageFields } from '../../../lib/cms-queries';
import { richContentFields } from '../../../lib/cms-queries';
import { globalSectionsFields } from '../../../lib/cms-queries';
import { imageBaseFields } from '../../../lib/cms-queries';

const { post, category } = Astro.params

const currentCategory = await sanityClient.fetch(`*[_type == "type_blogCategory" && defined(*[_type == "type_blog" && agencyBrand->name == '${Brands.DOMAINE}' && references(^._id)][0]) && slug.current == '${category}'][0]{ slug }`)
if (!currentCategory) return Astro.redirect('/404')

const content = await sanityClient.fetch(`*[_type == "type_blog" && agencyBrand->name == '${Brands.DOMAINE}' && slug.current == '${post}'][0]{
    title,
    heading,
    _id,
    slug,
    isHidden,
    authors[]->{name, role, bio, image{${imageFields}}, department->{title} },
    postDate,
    thumbnailImage{${imageFields}},
    category->{_id, title, slug}, 
    body{
        _type,
        _key,
        richContent[]{${richContentFields}},
        translations{ 
            ${Object.keys(Locales).filter(locale => Locales[locale] !== "en").map((locale) => (
            `"${Locales[locale]}": ${Locales[locale]}[]{ _type, _key, children[]{${richContentFields}} }`
            )
        ).join()}
        },
    },
    services[]->{_id, title, slug, serviceGroup->{_id, title, slug}},
    agencyBrand->{slug, name },
    globalSections{ sections[]{${globalSectionsFields}} },
    metafields{ title, description, image{${imageBaseFields}} },
}`)
if (!content) return Astro.redirect('/404')
---
<LayoutBlogPost
  content={content}
  brand={Brands.DOMAINE}
  locale={Locales.EN}
/>
