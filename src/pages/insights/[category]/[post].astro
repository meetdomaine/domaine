---
import { sanityClient } from 'sanity:client';
import LayoutDomaine from '../../../layouts/Layout-Domaine.astro';
import { paths } from '../../../components/global/utils/paths';
import { blogCardFields, projectGridFields, urlFor } from '../../../components/global/utils/cms-queries';
import SectionBlogFeed from '../../../components/global/sections/section-BlogFeed.astro';
import SectionProjectsFeed from '../../../components/global/sections/section-ProjectsFeed.astro';

export async function getStaticPaths() {
    const posts = await sanityClient.fetch(`
    *[_type == "type_blog" && agencyBrand->name == "Domaine"]{ 
        ..., 
        category->{..., slug{...} }, 
        authors[]->{...}, 
        "relatedPosts": *[_type == "type_blog" && references(^.category->_id)]{${blogCardFields}} | order(orderRank asc),
        "relatedProjects": 
            *[_type == "type_project" 
                && references(^.features[]->_id)
                // || references(^.services[]->_id)
                || references(^.industries[]->_id)
            ]{${projectGridFields}} | order(orderRank asc)[0...4]
        }`)
    return posts.map((post) => {
        // console.log(post)
        return {
            params: { post: post.slug.current, category: post.category.slug.current },
            props: { content: post }
        }
    })
}

interface Props {
    content: any
}

const { content } = Astro.props;
console.log(content.relatedProjects.length)

// const blogPosts = await sanityClient.fetch(`*[_type == "type_blog" && agencyBrand->name == "Domaine" && category->_id == '${content._id}' ] | order( postDate desc)`)
---
<LayoutDomaine
    title={content.title}
    searchFilter="type:blog-post"
>
    <a href={`${paths.root.blog.path}/${content.category.slug.current}`}><h6>{content.category.title}</h6></a>
    <h1>{content.title}</h1>
    <h6>{content.excerpt}</h6>

    <!-- <img src={urlFor(content.thumbnail).url()} -->

    <h6>Date:</h6>
    <p>{content.postDate}</p>

    <h6>Category:</h6>
    <p>{content.category.title}</p>

    <h6>Authors:</h6>
    {content.authors.map((author) => (
        <p>{author.name}</p>
        <p>{author.role}</p>
    ))}

    { content.relatedPosts && 
        <SectionBlogFeed 
            heading="Related Posts"
            posts={content.relatedPosts}
        />
    }

    { content.relatedProjects.length > 0 && 
        <SectionProjectsFeed
            heading="Related Projects"
            projects={content.relatedProjects}
        />
    }
</LayoutDomaine>