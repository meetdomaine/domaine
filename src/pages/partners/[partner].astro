---
import { sanityClient } from 'sanity:client';
import LayoutDomaine from '../../layouts/Layout-Domaine.astro';
import { imageFields, projectGridFields, richContentFields, globalSectionsFields, blogCardFields, imageBaseFields, urlFor } from '../../lib/cms-queries';
import SectionProjectsFeed from '../../components/global/sections/section-ProjectsFeed.astro';
import AtomRichContent from '../../components/global/atoms/atom-richContent.astro';
import SectionGlobalSections from '../../components/global/sections/section-GlobalSections.astro';
import SectionBlogFeed from '../../components/global/sections/section-BlogFeed.astro';
import PartnerPostHero from '../../components/global/partners/partnerPost-hero.astro';

export const prerender = true

export async function getStaticPaths() {
    const partners = await sanityClient.fetch(`
        *[_type == "type_partner" && tier->createLandingPages == true ]{ 
            ...,
            title, 
            slug, 
            excerpt,
            description,
            content[]{${richContentFields}},
            globalSections{ sections[]{${globalSectionsFields}} },
            icon{${imageFields}}, 
            tier->{...}, 
            websiteUrl, 
            websiteText,
            instagramUrl,
            twitterUrl,
            linkedInUrl,
            youTubeUrl,
            tikTokUrl,
            "blogPosts": *[_type == "type_blog" && references(^._id) && isHidden != true]{${blogCardFields}} | order(orderRank),
            "projects": *[_type == "type_project" && references(^._id) && isHidden != true]{${projectGridFields}} | order(orderRank),
            metafields{ title, description, image{${imageBaseFields}} },
        }`)

    return partners.map((partner) => {
        return {
            params: { partner: partner.slug.current },
            props: { content: partner }
        }
    })
}

interface Props {
    content: any
}


const { content } = Astro.props;
// console.log(content.metafields)

---
<LayoutDomaine
    title={`${content.metafields?.title ? content.metafields.title : content.title} | Partners`}
    description={content.metafields?.description ? content.metafields.description : null}
    image={content.metafields?.image ? urlFor(content.metafields.image).url() : null}
    searchFilter="type:partner"
    activePath="/partners"
    showPreloader={false}
>

    <PartnerPostHero 
        tier={content.tier}
        title={content.title}
        excerpt={content.excerpt}
        description={content.description}
        icon={content.icon}
        websiteText={content.websiteText}
        websiteUrl={content.websiteUrl}
        instagramUrl={content.instagramUrl}
        twitterUrl={content.twitterUrl}
        linkedInUrl={content.linkedInUrl}
        youTubeUrl={content.youTubeUrl}
        tikTokUrl={content.tikTokUrl}
    />

    <AtomRichContent 
        content={content.content}
    />

    {content.globalSections?.sections.map((section, i) => (
        <SectionGlobalSections brand="domaine" section={section} key={i} />
    ))}

    {content.blogPosts?.length > 2 &&
        <SectionBlogFeed 
            heading={`${content.title} Insights`}
            posts={content.blogPosts.slice(0, 5)}
        />
    }

    {content.projects?.length > 2 &&
        <SectionProjectsFeed 
            heading={`Our work with ${content.title}`}
            projects={content.projects.slice(0, 4)}
        />
    }
</LayoutDomaine>