---
import { sanityClient } from 'sanity:client';
import LayoutDomaine from '../../layouts/Layout-Domaine.astro';
import { paths } from '../../components/global/utils/paths';
import PartnerTile from '../../components/global/partners/global-PartnerTile.astro'
import { imageFields, partnerTileFields, videoFields } from '../../components/global/utils/cms-queries';
import PartnerCard from '../../components/global/partners/global-PartnerCard.astro';
import PartnersIndexHero from '../../components/global/partners/partnersIndex-hero.astro';
import { allPartners_Domaine } from '../../components/global/utils/cms-content';
import PartnersIndexTier from '../../components/global/partners/partnersIndex-tier.astro';
import SectionForm from '../../components/global/sections/section-Form.astro';

const partnerTiers =  await sanityClient.fetch(`
    *[_type == "type_partnerTier"]{ 
        ..., 
        "partners": *[_type == "type_partner" && references(^._id)]{
            ${partnerTileFields} 
        } | order(orderRank)
    } | order(orderRank)`)

const pageSettings = await sanityClient.fetch(` *[_type == "page_partners-index"] { title, heading, heroMedia{${videoFields}}, text, formHeading, formText, hubspotFormId }[0]`)
console.log(pageSettings)
---
<LayoutDomaine
    title={pageSettings.title}
    searchFilter="type:page"
    activePath="/partners"
>
    <PartnersIndexHero 
        title={pageSettings.title}
        heading={pageSettings.heading}
        media={pageSettings.heroMedia}
        text={pageSettings.text}
        partnersCount={allPartners_Domaine.length}
    />

    <div class="partner-tiers">
        {partnerTiers.map((tier) => (
            <PartnersIndexTier 
                tier={tier}
            />
        ))}
    </div>

    {pageSettings.hubspotFormId && 
        <SectionForm 
            hubspotFormId={pageSettings.hubspotFormId}
            heading={pageSettings.formHeading}
            text={pageSettings.formText}
        />
    }

</LayoutDomaine>

<style>

    .partner-tiers {
        padding-inline: var(--page-margin);
        padding-block: var(--header-height) var(--space-xl);
        display: flex;
        flex-direction: column;
        gap: var(--space-xl);
    }

    .partner-tier {
        display: flex;
        flex-direction: column;
        gap: var(--space-xs);
    }

    .partner-tier-header {
        display: flex;
        flex-direction: row;
        gap: var(--space-sm);
        /* align-items: center; */
    }

    .partners {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: var(--space-xs);
    }

    .icon {
        width: 30px;
    }
</style>