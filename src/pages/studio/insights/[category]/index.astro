---
import { Brands } from '../../../../enums/brands';
import LayoutBlogIndex from '../../../../layouts/Layout_BlogIndex.astro';
import { blogCardFields, urlFor } from '../../../../lib/cms-queries';
import { getBlogCategories } from '../../../../lib/cached-content';
import { sanityClient } from 'sanity:client';
import { loadQuery } from '../../../../lib/sanity-load-query';
import { getEnv } from '../../../../lib/getEnv';

export async function getStaticPaths() {
    const categories = await getBlogCategories(Brands.STUDIO)
    return categories.map((category) => {
        return {
            params: { 
                category: category.slug.current
            },
            props: { content: category }
        }
    })
}

let blogCategoryContent

if (getEnv('PUBLIC_SERVER_RENDERING_ENABLED', Astro.locals)) {
    const { category } = Astro.params
    const categories = await getBlogCategories(Brands.STUDIO)
    blogCategoryContent = categories.find(cat => cat.slug.current === category)
} else {
    const { content } = Astro.props
    blogCategoryContent = content
}

const { data: pageSettings } = await loadQuery({ 
  query: `*[_type == "page_blog-index" && _id == "page_blog-index-studio"][0]`
})
const blogPosts = await sanityClient.fetch(`*[_type == "type_blog" && agencyBrand->name == '${Brands.STUDIO}' && isHidden != true && category->slug.current == '${blogCategoryContent.slug.current}' ]{${blogCardFields}}|order(postDate desc)`)
---
<LayoutBlogIndex
    title={pageSettings.metafields?.title ? pageSettings.metafields.title : pageSettings.title}
    description={pageSettings.metafields?.description ? pageSettings.metafields.description : null}
    image={pageSettings.metafields?.image ? urlFor(pageSettings.metafields.image).url() : null}
    pageSettings={pageSettings}
    blogPosts={blogPosts}
    heading={pageSettings.title}
    subheading={pageSettings.heading}
    searchFilter="type:page"
    showPreloader={false}
    brand={Brands.STUDIO}
    slug={blogCategoryContent.slug}
/>
