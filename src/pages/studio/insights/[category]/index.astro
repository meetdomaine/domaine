---
import { Brands } from '../../../../enums/brands';
import LayoutBlogIndex from '../../../../layouts/Layout_BlogIndex.astro';
import { blogCardFields, urlFor } from '../../../../lib/cms-queries';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import { loadQuery } from '../../../../lib/sanity-load-query';
const { env } = Astro.locals.runtime;

export async function getStaticPaths() {
    const categories = await getCollection('blogCategories')
    return categories.filter((blogPost) => blogPost.data.postCount[Brands.STUDIO] > 0).map((category) => {
        return {
            params: { 
                category: category.id
            },
            props: { content: {...category.data} }
        }
    })
}

let blogCategoryContent

if (env.SERVER_RENDERING_ENABLED) {
    const { category } = Astro.params
    const { data } = await getEntry('blogCategories', category)
    blogCategoryContent = data
} else {
    const { content } = Astro.props
    blogCategoryContent = content
}

const pageSettings = await getEntry('blogIndexSettings', 'page_blog-index-studio')
const { data: blogPosts } = await loadQuery({ query: `*[_type == "type_blog" && agencyBrand->name == '${Brands.STUDIO}' && isHidden != true && category->slug.current == '${blogCategoryContent.slug.current}' ]{ "id": slug.current, "data":{${blogCardFields}} }|order(data.postDate desc)`})
---
<LayoutBlogIndex
    title={pageSettings.data.metafields?.title ? pageSettings.data.metafields.title : pageSettings.data.title}
    description={pageSettings.data.metafields?.description ? pageSettings.data.metafields.description : null}
    image={pageSettings.data.metafields?.image ? urlFor(pageSettings.data.metafields.image).url() : null}
    pageSettings={pageSettings.data}
    blogPosts={blogPosts}
    heading={pageSettings.data.title}
    subheading={pageSettings.data.heading}
    searchFilter="type:page"
    showPreloader={false}
    brand={Brands.STUDIO}
    slug={blogCategoryContent.slug}
/>
