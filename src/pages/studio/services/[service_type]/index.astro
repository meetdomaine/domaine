---
import { getCollection } from "astro:content"
import LayoutServiceType from "../../../../layouts/Layout_ServiceType.astro"
import { Brands } from "../../../../enums/brands"
import { getEntry } from "astro:content"
import { getServiceTypes } from "../../../../lib/cached-content";
const { env } = Astro.locals.runtime;

export async function getStaticPaths() {
    const serviceTypes = await getServiceTypes(Brands.STUDIO)
    return serviceTypes.map((serviceType) => {
        return {
            params: { service_type: serviceType.id },
            props: { content: {...serviceType.data} }
        }
    })
}

let serviceTypeContent

if (env.SERVER_RENDERING_ENABLED) {
    const { service_type } = Astro.params
    const { data } = await getEntry('serviceTypes', service_type)
    serviceTypeContent = data
} else {
    const { content } = Astro.props
    serviceTypeContent = content
}
---
<LayoutServiceType 
    content={serviceTypeContent}
    activePath="/studio/services"
    brand={Brands.STUDIO}
/>