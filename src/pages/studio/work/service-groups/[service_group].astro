---
import LayoutProjectsIndex from '../../../../layouts/Layout_ProjectsIndex.astro';
import { Brands } from '../../../../enums/brands';
import { projectGridFields } from '../../../../lib/cms-queries';
import { getServiceGroups } from '../../../../lib/cached-content';
import { sanityClient } from 'sanity:client';
import { getEnv } from '../../../../lib/getEnv';

export const prerender = false // Make Service Group content static so it doesn't refetch on each page load

export async function getStaticPaths() {
    const serviceGroups = await getServiceGroups(Brands.STUDIO)
    return serviceGroups.map((serviceGroup) => {
        return {
            params: { service_group: serviceGroup.slug.current },
            props: { content: serviceGroup }
        }
    })
}

let serviceGroupContent

if (getEnv('PUBLIC_SERVER_RENDERING_ENABLED', Astro.locals) === "true") {
    const { service_group } = Astro.params
    const serviceGroups = await getServiceGroups(Brands.STUDIO)
    serviceGroupContent = serviceGroups.find(sg => sg.slug.current === service_group)
} else {
    const { content } = Astro.props
    serviceGroupContent = content
}

const projects = await sanityClient.fetch(`*[_type == "type_project" && agencyBrand->name == '${Brands.STUDIO}' && isHidden != true && '${serviceGroupContent.slug.current}' in services[]->serviceGroup->slug.current ]{${projectGridFields}} | order(orderRank)`)
---
<LayoutProjectsIndex
    content={serviceGroupContent}
    projects={projects}
    currentPath={`/services/${serviceGroupContent.slug.current}`}
    brand={Brands.STUDIO}
/>