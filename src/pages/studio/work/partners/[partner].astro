---
import { getEntry } from 'astro:content';
import LayoutProjectsIndex from '../../../../layouts/Layout_ProjectsIndex.astro';
import { Brands } from '../../../../enums/brands';
import { projectGridFields } from '../../../../lib/cms-queries';
import { getPartners } from '../../../../lib/cached-content';
import { sanityClient } from 'sanity:client';
const { env } = Astro.locals.runtime;

export async function getStaticPaths() {
    const partners = await getPartners(Brands.STUDIO)
    return partners.map((partner) => {
        return {
            params: { partner: partner.id },
            props: { content: {...partner.data} }
        }
    })
}

let partnerContent

if (env.SERVER_RENDERING_ENABLED) {
    const { partner } = Astro.params
    const { data } = await getEntry('partners', partner)
    partnerContent = data
} else {
    const { content } = Astro.props
    partnerContent = content
}

const projects = await sanityClient.fetch(`*[_type == "type_project" && agencyBrand->name == '${Brands.STUDIO}' && !isHidden && '${partnerContent.id}' in partners[]->slug.current ]{ "id": slug.current, "data":{${projectGridFields}} } | order(data.orderRank)`)
---
<LayoutProjectsIndex
    content={partnerContent}
    projects={projects}
    currentPath={`/partners/${partnerContent.id}`}
    brand={Brands.STUDIO}
/>