---
import { getEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import LayoutProjectsIndex from '../../../../layouts/Layout_ProjectsIndex.astro';
import { Brands } from '../../../../enums/brands';
import { loadQuery } from '../../../../lib/sanity-load-query';
import { projectGridFields } from '../../../../lib/cms-queries';
const { env } = Astro.locals.runtime;

export async function getStaticPaths() {
    const industries = await getCollection('industries')
    return industries.filter((industry) => industry.data.projectCount[Brands.STUDIO] > 0).map((industry) => {
        return {
            params: { industry: industry.id },
            props: { content: {...industry.data} }
        }
    })
}

let industryContent

if (env.SERVER_RENDERING_ENABLED) {
    const { industry } = Astro.params
    const { data } = await getEntry('industries', industry)
    industryContent = data
} else {
    const { content } = Astro.props
    industryContent = content
}

const { data: projects } = await loadQuery({ query: `*[_type == "type_project" && agencyBrand->name == '${Brands.STUDIO}' && isHidden != true && industry->slug.current == '${industryContent.id}' ]{ "id": slug.current, "data":{${projectGridFields}} } | order(data.orderRank)`})
---
<LayoutProjectsIndex
    content={industryContent}
    projects={projects}
    currentPath={`/industries/${industryContent.id}`}
    brand={Brands.STUDIO}
/>