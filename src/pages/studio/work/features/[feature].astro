---
import LayoutProjectsIndex from '../../../../layouts/Layout_ProjectsIndex.astro';
import { Brands } from '../../../../enums/brands';
import { projectGridFields } from '../../../../lib/cms-queries';
import { getProjectFeatures } from '../../../../lib/cached-content';
import { sanityClient } from 'sanity:client';
const { env } = Astro.locals.runtime;

export async function getStaticPaths() {
    const features = await getProjectFeatures(Brands.STUDIO)
    return features.map((feature) => {
        return {
            params: { feature: feature.slug.current },
            props: { content: feature }
        }
    })
}

let featureContent

if (env.PUBLIC_SERVER_RENDERING_ENABLED) {
    const { feature } = Astro.params
    const features = await getProjectFeatures(Brands.STUDIO)
    featureContent = features.find(f => f.slug.current === feature)
} else {
    const { content } = Astro.props
    featureContent = content
}

const projects = await sanityClient.fetch(`*[_type == "type_project" && agencyBrand->name == '${Brands.STUDIO}' && isHidden != true && '${featureContent.slug.current}' in features[]->slug.current ]{${projectGridFields}} | order(orderRank)`)
---
<LayoutProjectsIndex 
    content={featureContent}
    projects={projects}
    currentPath={`/features/${featureContent.slug.current}`}
    brand={Brands.STUDIO}
/>