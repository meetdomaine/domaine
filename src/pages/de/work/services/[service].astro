---
import LayoutDomaineProjects from '../../../../layouts/Layout-Domaine_ProjectsIndex.astro';
import { getProjects_Domaine, getServices_Domaine } from '../../../../components/global/utils/cms-content';
import { imageBaseFields, urlFor } from '../../../../components/global/utils/cms-queries';
import { Locales } from '../../../../components/global/utils/locales';

export const prerender = true

export async function getStaticPaths() {
    const services = await sanityClient.fetch(`*[_type == "type_service" && "Domaine" in agencyBrands[]->name ]{
        ...,
        isHidden,
        excerpt,
        description,
        agencyBrands[]->{..., slug, name},
        serviceGroup->{
            ..., 
            serviceType->{...}
        },
        metafields{ title, description, image{${imageBaseFields}} },
    } | order(postDate desc)`)
    return services.map((service) => {
        return {
            params: { service: service.slug.current },
            props: { content: service }
        }
    })
}

interface Props {
    content: any
}

const { content } = Astro.props
const allProjects = await getProjects_Domaine()
const projects = allProjects.filter((project) => project.services && project.services.some((service) => service._id === content._id ))

// console.log(content.relatedBlogPosts.length)
// console.log(content.relatedBlogPosts)
---
<LayoutDomaineProjects 
    title={ `${content.metafields && content.metafields.title ? content.metafields.title : content.title} | Work`}
    description={content.metafields?.description ? content.metafields.description : null}
    image={content.metafields?.image ? urlFor(content.metafields.image).url() : null}
    searchFilter="type:project-service"
    heading={content.title}
    subheading={content.excerpt}
    projects={projects}
    currentPath={`/services/${content.slug.current}`}
    relatedBlogPosts={content.relatedBlogPosts}
    locale={Locales.DE}
>
</LayoutDomaineProjects>