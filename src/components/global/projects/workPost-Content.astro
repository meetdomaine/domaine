---
import GlobalSections from "../sections/section-GlobalSections.astro"
import SectionProjectsFeed from "../sections/section-ProjectsFeed.astro"
import { getProjects_Domaine, getProjects_Studio } from "../utils/cms-content"
import WorkPostAbout from "./workPost-About.astro"
import WorkPostDetails from "./workPost-Details.astro"
import WorkPostHero from "./workPost-Hero.astro"

const { content, brand } = Astro.props

const allProjects = brand === "studio" ? await getProjects_Studio() : await getProjects_Domaine()
const relatedProjects = allProjects.filter((project) => project.industry.slug.current === content.industry.slug.current)
---
<div 
  class="project-content"
  data-color-scheme={content.foregroundColor === "light" ? "invert" : "default"}
  style={`${content.backgroundColor ? `--color-background: ${content.backgroundColor.hex};` : null}`}
>
  <WorkPostHero
      title={content.title}
      heroMedia={content.heroMedia}
      accentColor={content.accentColor}
  />

  <WorkPostAbout
      description={content.description}
      excerpt={content.excerpt}
      industry={content.industry}
      client={content.client}
      metrics={content.metrics}
      agencyBrand={content.agencyBrand.slug.current}
      theme={content.foregroundColor === "light" ? "glass-dark" : "glass-light"}
  />

  {content.sections && content.sections.map((section, i) => (
      <GlobalSections brand="domaine" section={section} key={i} />
  ))}

  <WorkPostDetails
      url={content.url}
      client={content.client}
      services={content.services}
      features={content.features}
      partners={content.partners}
      metrics={content.metrics}
      agencyBrand={content.agencyBrand.slug.current}
      theme={content.foregroundColor === "light" ? "light" : "dark"}
  />
</div>

    {relatedProjects.length > 0 &&
        <SectionProjectsFeed 
            heading="Related Projects"
            projects={relatedProjects}
        />
    }

<style>

    .project-content {
        --color-background-secondary: color-mix(in srgb, var(--color-background) 75%, var(--color-lightest));
        --color-foreground-secondary: color-mix(in srgb, var(--color-background) 30%, var(--color-foreground));
    }

    .project-content[data-color-scheme="invert"] {
        --color-background-secondary: color-mix(in srgb, var(--color-background) 80%, var(--color-darkest));
        --color-foreground-secondary: color-mix(in srgb, var(--color-background) 30%, var(--color-foreground));
    }

</style>