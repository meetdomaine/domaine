---
import { Icon } from 'astro-icon/components';
import { sanityClient } from 'sanity:client';
import AtomTag from '../atoms/atom-tag.astro';
import { 
    allProjectFeatures_Domaine, 
    allProjectFeatures_Studio,
    allPartners_Domaine,
    allPartners_Studio,
    allClientIndustries_Domaine,
    allClientIndustries_Studio,
    allServiceGroups_Domaine,
    allServiceGroups_Studio,
} from '../utils/cms-content';

const { brand, currentPath } = Astro.props;

const allFilters = await Promise.all([
    {
        title: 'Industries',
        path: 'industries/',
        filters: brand.toLowerCase() === "studio" ? allClientIndustries_Studio : allClientIndustries_Domaine
    },
    {
        title: 'Features',
        path: 'features/',
        filters: brand.toLowerCase() === "studio" ? allProjectFeatures_Studio : allProjectFeatures_Domaine
    },
    {
        title: 'Partners',
        path: 'partners/',
        filters: brand.toLowerCase() === "studio" ? allPartners_Studio : allPartners_Domaine
    },
    {
        title: 'Services',
        path: 'services/',
        filters: brand.toLowerCase() === "studio" ? allServiceGroups_Studio : allServiceGroups_Domaine
    },
])

// console.log(brand)

---
<dialog popover id="projects-filter" class="projects-filter" >
    <div class="section-title">
        <h2 class="h5">Filter Projects</h2>
        <button class="close-button button-reset" popovertarget="projects-filter">
            <Icon class="close-icon" name="pixel_x" />
        </button>
    </div>
    <div class="section-content">
        {allFilters.map((filterGroup) => (
            <div class="filter-type">
                <p class="filter-title h6">{filterGroup.title}</p>
                <div class="filters">
                    {filterGroup.filters.map((filter) => {
                        return (
                            <AtomTag 
                                text={filter.title}
                                url={`/${brand === "Studio" ? "studio/" : ""}work/${filterGroup.path}${filter.slug.current}`}
                                theme={currentPath == `/${filterGroup.path}${filter.slug.current}` ? "dark" : "light"}
                            />
                        )
                    })}
                </div>
            </div>
        ))}
    </div>
</dialog>

<style>

    

    .projects-filter {
        opacity: 0;
        translate: 100% 0;
        display: flex;
        grid-template-columns: 0fr;
        flex-direction: column;
        gap: var(--space-3xl);
        padding-inline: var(--page-margin);
        padding-block: var(--space-md);
        border: none;
        outline: none;
        width: min(60em, calc(100% - var(--page-margin) * 2));
        border-radius: var(--radius-sm);
        margin-right: var(--page-margin);
        margin-top: var(--space-sm);
        justify-self: flex-end;
        transition: translate var(--anim-lg), opacity var(--anim-lg), display var(--anim-md) allow-discrete;
        overflow: hidden;
    }

    .projects-filter:popover-open {
        translate: 0% 0;
        opacity: 1;
    }

    /* .projects-filter:popover-open::backdrop {
        transition: opacity var(--anim-lg);
    } */

    .projects-filter::backdrop {
        opacity: 1;
        background-color: var(--background-blur-color);
        backdrop-filter: var(--background-blur);
        -webkit-backdrop-filter: var(--background-blur);
        transition: opacity var(--anim-lg);
    }

    @starting-style {
        .projects-filter {
            translate: 100% 0;
            opacity: 0;
        }
        .projects-filter::backdrop {
            opacity: 0;
        }
    }


    .section-title {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }

    .close-icon  {
        width: var(--icon-md);
        height: var(--icon-md);
    }

    .section-content {
        display: flex;
        flex-direction: column;
        gap: var(--space-xl);
    }

    .filter-type {
        border-bottom: 1px solid var(--color-border);
        display: flex;
        flex-direction: row;
    }

    .filter-type:last-child {
        border-bottom: 1px solid transparent;
    }

    .filter-title {
        flex: 0 0 20%;
    }

    .filters {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-bottom: var(--space-xl);
        gap: var(--space-2xs);
    }

</style>