---
import { Translations } from '../../../lib/locales';
import { getLocaleUrl, getTranslationString } from '../../../lib/translations';
import AtomTag from '../atoms/atom-tag.astro';
import { Brands } from '../../../enums/brands';
import { getBlogCategories } from '../../../lib/cached-content';

const { brand, slug, locale } = Astro.props
const categories = await getBlogCategories(brand)
---
<div class="blog-filters">
    <a
        class="filter-all filter caption" 
        href={getLocaleUrl(`${brand == Brands.STUDIO ? '/studio' : ''}/insights/`, locale)}
        data-active={!slug ? "true" : "false"}
    >{locale ? Translations['ALL-INSIGHTS'].locales[locale] : Translations['ALL-INSIGHTS'].name}</a>
    <div class="filter-tags">
        {categories.map((category) => (
            <AtomTag 
                title={getTranslationString(category.title, locale)}
                url={getLocaleUrl(`${brand == Brands.STUDIO ? '/studio' : ''}/insights/${category.slug.current}`, locale)}
                theme={slug?.current == category.slug.current ? "glass-dark" : "default"}
            />
        ))}
    </div>
</div>

<style>
    .blog-filters {
        display: flex;
        flex-direction: row;
        padding-inline: var(--page-margin);
        padding-block: var(--space-md);
        gap: var(--space-sm);
    }

    .filter-tags {
        display: flex;
        flex-direction: row;
        gap: var(--space-2xs);
    }

    .filter {
        text-decoration: none;
        margin: 0;
    }

    @media screen and (width <= 768px) {
        .blog-filters {
            flex-direction: column;
            padding-inline: 0;
        }

        .filter-tags {
            overflow-x: auto;
            padding-block-end: var(--space-sm);
        }


        .filter-all,
        .filter-tags {
            padding-inline: var(--page-margin);
        }
    }

    
</style>
