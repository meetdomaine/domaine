---
import { getRelativeLocaleUrl } from "astro:i18n";
import AtomSanityMedia from "../atoms/atom-sanityMedia.astro";
import AtomTag from "../atoms/atom-tag.astro";
import { formatDate } from "../../../lib/format-date";
import { getLocaleUrl, getTranslationString } from "../../../lib/translations";

interface Props {
  title: any;
  series: string;
  slug: any;
  thumbnailImage: any;
  category: any;
  agencyBrand: any;
  postDate: any;
  locale: string;
}

const { title, series, thumbnailImage, slug, category, agencyBrand, postDate, locale } = Astro.props;

const categoryUrl = `${agencyBrand.slug.current == "/studio" ? "/studio" : ""}/insights/${category.slug.current}`;
const postUrl = `${categoryUrl}/${slug.current}`;

const formattedDate = formatDate(postDate);
---

<article
  class="blog-card"
  data-animate-viewport="true"
  data-animation="fade"
>
  <a 
    href={locale ? getRelativeLocaleUrl(locale, postUrl) : postUrl } 
    class="card-media"
  >
    <AtomSanityMedia
      image={thumbnailImage.image}
      aspectRatio={3 / 4}
      sizes="30vw"
    />
  </a>
  <div class="card-text">
    {series && <p class="card-series caption">{getTranslationString(series, locale)}</p>}
    {title &&
      <a 
        href={getLocaleUrl(postUrl, locale)} 
        class="card-title h6"
      >{getTranslationString(title, locale)}</a>
    }
  </div>
  <div class="card-info">
    <AtomTag 
      title={locale && category.title.translations?.[locale] ? category.title.translations[locale] : category.title.text} 
      url={locale ? getRelativeLocaleUrl(locale, categoryUrl) : categoryUrl} 
    />
    {postDate && <p class="date caption">{formattedDate}</p>}
  </div>
</article>

<style>
  .blog-card {
    flex: 0 1 100%;
    text-decoration: none;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-xs);
  }

  .card-media {
    align-self: stretch;
    border-radius: var(--radius-sm);
    overflow: hidden;
  }

  .card-media :global(img) {
    scale: 1;
    transition: scale var(--anim-lg);
  }
  .card-media:hover :global(img) {
    scale: 1.05;
  }

  .card-info {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    gap: var(--space-xs);
  }

  .date {
    margin: 0;
    color: var(--color-foreground-secondary);
  }

  .card-text {
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);
  }

  .card-title {
    text-decoration: none;
  }

  .card-title:hover {
    color: var(--color-foreground-secondary);
  }
</style>