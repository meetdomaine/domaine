---
import { getLocaleUrl, getTranslationString } from "../../../lib/translations"
import { Translations } from "../../../lib/locales"
import AtomSanityImage from "../atoms/atom-sanityImage.astro"
import AtomTag from "../atoms/atom-tag.astro"
import { formatDate } from "../utils/format-date"
import GlobalAuthorTile from "./global-AuthorTile.astro"

const { post, locale } = Astro.props


const formattedDate = formatDate(post.postDate)
// const date = new Date(post.postDate)
// const formattedDate = `${date.getMonth().toString().padStart(2, "0")}.${date.getDate().toString().padStart(2, "0")}.${date.getFullYear().toString().padStart(2, "0")}`
---
<section class="blog-post-hero">
    <div class="section-media">
        <AtomSanityImage 
            image={post.thumbnailImage.image}
            sizes="50vw"
            pagefindMeta="image[src], image_alt[alt]"
            aspectRatio={3 / 4}
            cover={true}
        />
    </div>
    <div class="section-content">
        <div class="section-title">
            {post.series && <p class="h6">{getTranslationString(post.series, locale)}</p>}
            {post.title &&
                <h1 
                    class="post-title h2"
                    data-pagefind-meta={`title, categoryTitle:${post.category.title}, categoryUrl:${`${post.agencyBrand.slug.current === "studio" ? "/studio" : ""}/insights/${post.category.slug.current}`}`}
                >{getTranslationString(post.title, locale)}</h1>
            }
        </div>
        <div class="post-info">
            <div class="post-details">
                <AtomTag 
                    text={getTranslationString(post.category.title, locale)}
                    pagefindMetaText="categoryTitle"
                    pagefindMetaUrl="categoryUrl[href]"
                    url={getLocaleUrl(`${post.agencyBrand.slug.current === "/studio" ? "/studio" : ""}/insights/${post.category.slug.current}`, locale)}
                />
                <p class="caption">{formattedDate}</p>
                <span class="post-authors">
                    <span class="caption">{locale ? Translations.BY.locales[locale] : Translations.BY.name}:</span>
                    {post.authors.map((author, i) => (
                        <span class="caption">{author.name}{i < post.authors.length - 1 ? ", " : ""}</span>
                        // <GlobalAuthorTile 
                        //     author={author}
                        // />
                    ))}
                </span>
            </div>
            {post.excerpt && <h6>{getTranslationString(post.excerpt, locale)}</h6>}
        </div>
    </div>
</section>

<style>
    .blog-post-hero {
        display: flex;
        flex-direction: row;
        justify-content: stretch;
        align-items: flex-start;
        /* height: 90svh; */
    }

    .section-media {
        aspect-ratio: 3 / 4;
        flex: 1 1 50%;
        min-width: 0;
        /* max-height: 100%; */
        /* max-width: 50%; */
    }

    .section-title {
        display: flex;
        flex-direction: column;
        gap: var(--space-2xs);
    }

    .section-content {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        align-self: stretch;
        justify-content: space-between;
        padding-inline: var(--page-margin);
        padding-block: calc(var(--header-height) + var(--space-xl)) var(--space-lg);
        /* flex: 1 1 auto; */
        flex: 1 1 50%;
        min-width: 30rem;
        max-height: 100svh;
        position: sticky;
        top: 0;
        /* max-width: 40em; */
    }

    .post-info {
        display: flex;
        flex-direction: column;
        gap: var(--space-sm);
    }

    .post-details {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: var(--space-xl);
    }

    @media screen and ( width <= 768px) {
        .blog-post-hero {
            flex-direction: column-reverse;
            gap: var(--space-lg);
            align-items: stretch;
            height: auto;
        }

        .section-media {
            max-height: unset;
            max-width: unset;
        }

        .section-content {
            justify-content: flex-start;
            padding-inline: var(--page-margin);
            padding-block: calc(var(--header-height) * 2) var(--space-md);
            flex: 0 0 auto;
            position: relative;
            top: unset;
        }
    }
</style>