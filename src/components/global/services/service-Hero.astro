---
import { Brands } from "../../../enums/brands"
import { getLocaleUrl, getTranslationString } from "../../../lib/translations"
import AtomServiceLink from "../atoms/atom-serviceLink.astro"

const { subservices, brand, title, description, excerpt, breadcrumbs, locale } = Astro.props
---
<section class="service-hero">
    <div class="section=title">
        <div class="breadcrumbs h5">
            {breadcrumbs?.map((breadcrumb) => (
                <a 
                    class="breadcrumb-link" 
                    href={getLocaleUrl(breadcrumb.url, locale)}
                >
                    {breadcrumb.title.translations ? getTranslationString(breadcrumb.title, locale) : breadcrumb.title}
                </a>

            ))}
        </div>
        <h1 class="service-title h5">{getTranslationString(title, locale)}</h1>
    </div>
    <div class="section-content">
        { excerpt && <p class="h4">{getTranslationString(excerpt, locale)}</p>}
        { description && <p class="text h6">{getTranslationString(description, locale)}</p>}
        { subservices &&
            <div class="subservices">
                { subservices.map((subservice) => (
                    <AtomServiceLink 
                        title={getTranslationString(subservice.title, locale)}
                        url={getLocaleUrl(`${brand === Brands.STUDIO ? "/studio/" : "/"}services/${subservice.serviceGroup.serviceType.slug.current}/${subservice.serviceGroup.slug.current}/${subservice.slug.current}`, locale)}
                        excerpt={getTranslationString(subservice.excerpt, locale)}
                        isHidden={subservice.isHidden}
                    />
                )) }
            </div>
        }
    </div>
</section>

<style>
    .service-hero {
        padding-inline: var(--page-margin);
        padding-block: calc(var(--header-height) * 2) var(--space-4xl);
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: var(--space-xs);
    }

    .breadcrumbs {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 0.5ch;
    }

    .breadcrumb-link {
        text-decoration: none;
        color: var(--color-foreground-secondary);
    }

    .section-content {
        max-width: 40rem;
        display: flex;
        flex-direction: column;
        gap: var(--space-md);
    }

    .subservices {
        display: flex;
        flex-direction: column;
        max-width: 60%;
    }

    @media screen and (width < 768px) {
        
        .service-hero {
            display: flex;
            flex-direction: column;
            gap: var(--space-xs);
        }

        .section-content {
            max-width: 100%;
        }

        .subservices {
            max-width: 100%;
        }
    }
</style>