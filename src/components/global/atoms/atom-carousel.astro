---
import AtomSanityImage from "./atom-sanityImage.astro"
import AtomSanityMedia from "./atom-sanityMedia.astro";

interface Props {
    slides: Array<Media>,
    aspectRatio?: number,
    slideCount: number,
    centered?: boolean,
    spacing?: string,
}

const { slides, aspectRatio, slideCount, centered, spacing } = Astro.props
---
<div 
    class="swiper-carousel" 
    data-slide-count={slideCount} 
    data-centered={centered ? "true" : "false"}
    data-spacing={spacing}
>
    <div class="swiper-wrapper">
        {slides.map((carouselItem) => (
            <div class="swiper-slide">
                <AtomSanityMedia
                    image={carouselItem.image}
                    video={carouselItem.video}
                    aspectRatio={aspectRatio}
                    sizes="90vw"
                />
                {/* <AtomSanityImage 
                    image={carouselItem.image}
                    sizes="90vw"
                    aspectRatio={aspectRatio}
                    eager={true}
                /> */}
            </div>
        ))}
    </div>
</div>

<script>
    import { slide } from 'astro:transitions';
    import Swiper from 'swiper';
    import 'swiper/css';

    const swipers: NodeListOf<HTMLElement> = document.querySelectorAll('.swiper-carousel')

    swipers.forEach((swiper) => {
        
        const slideCount = parseFloat(swiper.dataset.slideCount)
        const centered = swiper.dataset.centered === "true"
        const spacing = swiper.dataset.spacing

        const carousel = new Swiper(swiper, {
            direction: 'horizontal',
            slidesPerGroup: 1,
            slidesPerView: slideCount ? slideCount : 1.5,
            centeredSlides: centered,
            spaceBetween: spacing ? spacing : "10%",
            grabCursor: true,
            slideToClickedSlide: true,
        });
    })

</script>

<style>
    .swiper-carousel {
        overflow: clip;
        padding-inline: var(--page-margin);
        /* width: 100%; */
    }

    .swiper-slide {
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>