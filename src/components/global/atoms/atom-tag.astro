---
interface Props {
    title?: string,
    text?: string,
    url?: string,
    theme?: string,
    animateViewport?: boolean,
    animation?: string,
    animationDelay?: number,
}

const { title, text, url, theme } = Astro.props
---
{url ? 
    <a 
        class={`tag ${theme === "dark" ? "glass-dark" : ""}`} 
        href={url}
        data-theme={theme}
    >
        {title && <span class="title caption">{title}</span>}
        {text && <span class="text caption">{text}</span>}
    </a>
:    
    <div 
        class={`tag ${theme === "dark" ? "glass-dark" : ""}`} 
        data-theme={theme}
    >
        {title && <span class="title caption">{title}</span>}
        {text && <span class="text caption">{text}</span>}
    </div>
}

<style>
    .tag {
        display: flex;
        flex-direction: row;
        text-decoration: none;
        padding-inline: var(--space-2xs);
        padding-block: var(--space-3xs);
        gap: 0.2em;
        flex: 0 0 auto;
        border-radius: var(--radius-sm);
        /* color: inherit; */
        transition: background-color var(--anim-sm);
    }

    .tag:not(.glass-dark) {
        background-color: var(--color-lighter);
        color: var(--color-darkest);
    }

    .title {
        color: var(--color-dark);
    }

    a.tag:not(.glass-dark):hover {
        background-color: var(--color-light);
    }
</style>