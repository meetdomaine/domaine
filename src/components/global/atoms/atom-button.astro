---
import { Icon } from "astro-icon/components"

interface Props {
    text: string,
    url?: string,
    icon?: string,
    newTab?: boolean,
    invert?: boolean,
    style?: string,
    classList?: string,
    fill?: boolean,
    popoverTarget?: string,
}

const { text, url, icon, newTab, style, invert, classList, fill, popoverTarget} = Astro.props
---
{popoverTarget ? 
    <button 
        class={`button ${classList ? classList : ""} ${style === "tertiary" ? "h5" : "caption"} ${invert ? "color-invert" : ""}`} 
        data-style={style}
        data-fill={fill ? "true" : "false"}
        popovertarget={popoverTarget}
    >
        {text}
        {icon && <Icon name={icon} class="icon" />}
    </button>
:
    <a 
        class={`button ${classList ? classList : ""} ${style === "text-link" ? "utility" : style === "tertiary" ? "h5" : "caption"} ${invert ? "color-invert" : ""}`} 
        href={url} 
        target={newTab ? "_blank" : ""} 
        data-style={style}
        data-fill={fill ? "true" : "false"}
    >
        {text}
        {icon && <Icon name={icon} class="icon" />}
    </a>
}

<script>
import { lenis } from "../../../lib/lenis"

    const buttons = Array.from(document.querySelectorAll('.button'))
    buttons.forEach((button) => {
        const path = button.getAttribute("href")
        if (path && path[0] === "#") {
            const target = document.querySelector(path)
            button.addEventListener("click", (e) => {
                e.preventDefault()
                lenis.scrollTo(target, {
                    offset: -200,
                })
            })
        }
    })
</script>
    

<style>
    .button[data-fill="true"] {
        width: 100%;
    }

    .button:hover {
        cursor: pointer;
    }
</style>