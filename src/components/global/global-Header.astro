---
import { Icon } from "astro-icon/components";
import SearchMenu from "./search/SearchMenu"
import { sanityClient } from "sanity:client";
import { imageFields, videoFields } from "./utils/cms-queries";
import ContactMenu from "./global-ContactMenu.astro";

const { headerSettings, currentBrand } = Astro.props;

const brands = [
    {
        path: "/",
        logo: "domaine-wordmark",
        title: "Domaine",
        description: "Purpose-built for ambitious & beloved enterprise brands."
    },
    {
        path: "/studio",
        logo: "domaine-studio",
        title: "Domaine Studio",
        description: "Tailor-made for the needs of small & medium businesses."
    },
]

const brandIndex = brands.findIndex(brand => brand.path == currentBrand.url )

// const blogPosts = await sanityClient.fetch(`*[_type == "type_blog" && agencyBrand->name == "Domaine" && category->_id == '${content._id}' ] | order( postDate desc)`)
const defaultBlogPosts = await sanityClient.fetch(`*[_type == "type_blog" ]{title, slug, thumbnailImage{${imageFields}}, category->{slug}, postDate } | order( postDate desc)[0...3]`)
const defaultProjects = await sanityClient.fetch(`*[_type == "type_project"]{orderRank, title, slug, thumbnailMedia{${videoFields}, ${imageFields}} } | order( orderRank asc)[0...5]`)
const defaultFeatures = await sanityClient.fetch(`*[_type == "type_projectFeature"]{title, slug, orderRank } | order( orderRank asc)[0...10]`)
const defaultPartners = await sanityClient.fetch(`*[_type == "type_partner"]{title, slug, orderRank } | order(orderRank)[0...10]`)

// console.log(defaultProjects)
---
<header id="header">

    <div id="brand-menu" class="brand-menu" transition:name="brand-menu" style={`--brand-count: ${brands.length}; --current-index: ${brandIndex}`}>
        <div class="brands" data-brand={currentBrand.name}>
            {brands.map((brand, i) => (
                <a href={brand.path} class="brand-link" data-index={i} data-active={brandIndex === i ? "true" : "false"}>
                    <Icon class="logo" name={brand.logo} />
                    {/* <div class="brand-text">
                        <p class="brand-title caption">{brand.title}</p>
                        <p class="brand-description caption">{brand.description}</p>
                    </div> */}
                </a>
            ))}
        </div>
        <div class="icon-expand">
            <span class="expand-line"></span>
            <span class="expand-line"></span>
        </div>
    </div>

    <div id="navigation-menu" class="navigation">
        <nav class="navigation-links">
            {headerSettings.navigationLinks.links.map((link, i) => (
                <a href={link.linkUrl} class="navigation-link caption">{link.linkText}</a>
            ))}
        </nav>

        <button class="search-button glass-darkest caption" popovertarget="search-menu">
            <span>Search <em>projects, insights, and more...</em></span>
            <Icon class="icon" name="pixel_search" />
        </button>

    </div>

    <div id="utility-menu" class="utility-menu">
        <button class="utility-button notification-button">
            <Icon name="pixel_bell" class="utility-icon" />
        </button>
        <button class="utility-button contact-button" popovertarget="contact-menu">
            <Icon name="pixel_email" class="utility-icon" />
        </button>
    </div>

    <ContactMenu 
        hubspotFormId={headerSettings.hubspotFormId}
        processConsentMessage={headerSettings.processConsentMessage}
        marketingConsentMessage={headerSettings.marketingConsentMessage}

    />

    <dialog popover id="search-menu" class="search-menu color-invert">
        <button class="close-button" popovertarget="search-menu">
            <Icon class="icon close-icon" name="pixel_x" />
        </button>
        <SearchMenu 
            client:only="solid-js"
            defaultBlogPosts={defaultBlogPosts}
            defaultProjects={defaultProjects}
            defaultFeatures={defaultFeatures}
            defaultPartners={defaultPartners}
        />
    </dialog>
</header>

<script is:inline>
    const loadSearch = async () => {
        window.pagefind = await import("/pagefind/pagefind.js");
    }
    loadSearch()
</script>

<script>

    document.addEventListener("DOMContentLoaded", async () => {

        const brandMenu: HTMLElement = document.querySelector('.brand-menu');
        // const contactButton: HTMLButtonElement = document.querySelector('.contact-button');
        // const contactMenu: HTMLElement = document.querySelector('.contact-menu');

        // if (brandMenu) {
        //     brandMenu.classList.remove("active")
        //     brandMenu.addEventListener("mouseenter", () => brandMenu.classList.add("active"))
        //     brandMenu.addEventListener("mouseleave", () => brandMenu.classList.remove("active"))
        // }

        const handleBrandNavigate = (element, index) => {
            brandMenu.style.setProperty("--current-index", index)
            element.blur()
        }

        document.addEventListener("pageswap", (e) => {
            if (brandMenu) {
                brandMenu.classList.remove("active")
                console.log(e)
                // if (e.sourceElement instanceof HTMLElement && e.sourceElement.dataset && e.sourceElement.dataset.index) {
                //     handleBrandNavigate(e.sourceElement, e.sourceElement.dataset.index)
                // }
            }
        })

        // if (contactButton && contactMenu) {
        //     contactButton.addEventListener("click", () => contactMenu.classList.add("visible"))
        // }
    })
</script>

<style>
    header {
        --padding-top: var(--space-sm);
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: center;
        padding-inline: var(--page-margin);
        padding-block: var(--padding-top) 0;
        position: fixed;
        top: 0;
        height: var(--header-height);
        z-index: 999;
        width: 100%;
        display: grid;
        grid-template-columns: 1fr 1.5fr 1fr;
        align-items: stretch;
    }

    /* --- Brand Menu --- */

    .brand-menu {
        --icon-width: 80px;
        --icon-height: 30px;
        display: flex;
        flex-direction: row;
        align-items: stretch;
        gap: var(--space-2xs);
        border-radius: var(--radius-md);
        justify-self: start;
        background-color: var(--color-background-secondary);
        height: var(--header-element-height);
        transition: height var(--anim-sm);
    }

    .brand-menu:hover {
        height: calc(var(--header-element-height) * 2);
    }

    .brands {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        justify-content: flex-start;
        overflow-y: clip;
        /* translate: calc(-1 * var(--icon-width) * (var(--current-index) ) ) 0; */
        transition: translate var(--anim-sm);
        /* height: calc(var(--header-element-height) * 2); */
        /* height: var(--header-element-height); */
    }

    .brands[data-brand="Studio"] {
        justify-content: flex-end;
    }

    .brand-link {
        text-decoration: none;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        padding-inline: var(--space-xs);
        gap: var(--space-xs);
        flex: 0 0 var(--header-element-height);
    }

    .brand-link:hover {
        /* background-color: var(--color-background); */
    }

    .logo {
        flex: 0 0 auto;
    }

    .icon-expand {
        display: flex;
        flex-direction: row;
        gap: 2px;
        height: var(--header-element-height);
        align-items: center;
        padding-right: var(--space-xs);
    }

    .expand-line {
        width: 1px;
        height: 14px;
        background-color: var(--color-foreground);
        /* opacity: 0.2; */
    }


    /* --- Navigation Menu --- */

    .navigation {
        /* background-color: var(--color-background-secondary); */
        /* background-color: var(--color-background-secondary-translucent);
        backdrop-filter: var(--background-blur); */
        color: var(--color-foreground);
        display: flex;
        flex-direction: column;
        align-items: stretch;
        border-radius: var(--radius-md);
        overflow: clip;
        justify-self: center;
    }

    .navigation::after {
        content: "";
    }

    .navigation-links {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: var(--space-sm);
        padding-inline: var(--space-md);
        min-width: 300px;
        background-color: var(--color-background-secondary);
        height: var(--header-element-height);
    }

    .navigation-link {
        /* padding: 0 var(--space-2xs); */
        text-decoration: none;
    }

    .navigation-links .notification-button {
        position: relative;
        padding: 0;
        min-width: unset;
        background-color: transparent;
        color: inherit;
    }

    .navigation-links .notification-button::after {
        content: "";
        position: absolute;
        top: 0px;
        right: 0px;
        width: 4px;
        height: 4px;
        background-color: var(--color-brand);
        border-radius: var(--radius-rounded);
    }

    /* --- Search --- */

    .search-button {
        --hover-delay: .2s;
        position: relative;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding-inline: var(--space-md);
        overflow: clip;
        transition: color var(--anim-sm);
        transition-delay: 0s;
        border-radius: 0px;
        height: var(--header-element-height);
        /* display: none; */
    }

    .search-button * {
        z-index: 2;
    }

    .search-button:hover {
        color: var(--color-brand-contrast);
        transition-delay: var(--hover-delay);
    }

    .search-button::after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        height: 0%;
        background-color: var(--color-brand);
        transition: height var(--anim-sm);
        transition-delay: 0s;
        z-index: 1;
    }

    .search-button:hover::after {
        height: 100%;
        transition-delay: var(--hover-delay);
    }

    .search-button em {
        color: var(--color-light);
        translate: 0 0%;
        opacity: 1;
        font-style: normal;
        transition: all var(--anim-sm);
        transition-delay: 0s;
        display: inline-block;
    }

    .search-button:hover em {
        opacity: 0;
        transition-delay: var(--hover-delay);
    }

    /* --- Search Dialog --- */

    .search-menu {
        margin: var(--space-md);
        width: calc(100% - var(--space-md) * 2);
        height: calc(100% - var(--space-md) * 2);
        color: var(--color-foreground);
        background-color: color-mix(in srgb, var(--color-background) 70%, transparent);
        backdrop-filter: blur(15px);
        -webkit-backdrop-filter: blur(15px);
        border-radius: var(--radius-lg);
        border: none;
        padding: var(--space-md);
        max-height: 0%;
        opacity: 0;
        transition: opacity var(--anim-md), max-height var(--anim-md), display var(--anim-md) allow-discrete;
        display: flex;
        flex-direction: column;
        /* align-items: stretch; */
        gap: var(--space-md);
        display: none;
    }

    .search-menu:popover-open {
        opacity: 1;
        max-height: 100%;
        display: flex;
    }

    .search-menu::backdrop {
        background-color: color-mix(in srgb, var(--color-foreground) 10%, transparent);
    }

    @starting-style {
        .search-menu:popover-open {
            opacity: 0;
            max-height: 0%;
        }
    }

    .close-button {
        padding: 0;
        min-width: unset;
        background-color: transparent;
        align-self: flex-end;
        color: currentColor;
    }

    .close-icon {
        width: var(--icon-md);
        height: var(--icon-md);
    }


    /* --- Utility Links --- */

    .utility-menu {
        display: flex;
        flex-direction: row;
        /* align-items: stretch; */
        gap: var(--space-2xs);
        justify-self: end;
        height: var(--header-element-height);
    }

    .utility-button {
        min-width: 0;
        /* width: var(--header-element-height);
        height: var(--header-element-height); */
        aspect-ratio: 1 / 1;
        background-color: var(--color-background-secondary);
        color: var(--color-foreground);
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        flex: 0 0 auto;
    }

    .utility-icon {
        height: 40%;
        position: absolute;
        top: 50%;
        left: 50%;
        translate: -50% -50%;
        /* width: var(--icon-sm);
        height: var(--icon-sm); */
    }



</style>