---
import { sanityClient } from "sanity:client";
import AtomTag from "../atoms/atom-tag.astro";
import AtomSanityImage from "../atoms/atom-sanityImage.astro";
import { imageFields } from "../utils/cms-queries";
import { allServiceTypes_Domaine, allServiceTypes_Studio } from "../utils/cms-content";

const { section, brand, key } = Astro.props

const serviceTypes = brand === "studio" ? allServiceTypes_Studio : allServiceTypes_Domaine
---
<section class="section-services-feed" id={`section-services-feed-${key}`}>

    <div class="section-content">
        <h2 class="heading h5">{section.heading}</h2>
        {section.subheading && <p class="subheading">{section.subheading}</p>}
        <div class="service-types">
            {serviceTypes.map((serviceType, i) => (
                <div class="service-type">
                    <a 
                        class="service-type__button h1" 
                        data-animate-viewport="true"
                        data-animation="fade"
                        data-animation-delay={i * 200}
                        data-slug={serviceType.slug.current}
                        href={`/services/${serviceType.slug.current}`}
                    >{serviceType.title}</a>

                    <div class="services">
                        <div 
                            class="service-type__groups" 
                            data-slug={serviceType.slug.current}
                            data-active="false"
                        >
                            {serviceType.serviceGroups.map((serviceGroup) => (
                                <div class="service-type__group">
                                    <div class="service-type__services">
                                        <a 
                                            class="service-type__group-title h6" 
                                            href={`${brand === "studio" ? "/studio": ""}/services/${serviceType.slug.current}`}
                                        >{serviceGroup.title}</a>
                                        {serviceGroup.services.map((service, i) => (
                                            <AtomTag 
                                                text={service.title}
                                                url={`${brand === "studio" ? "/studio": ""}/services/${serviceType.slug.current}/${service.slug.current}`}
                                            />
                                        ))}
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
                <div class="section-media"
                    data-animate-viewport="true"
                    data-animation="fade"
                    data-animation-delay={400}
                >
                    {serviceType.images.map((imageObject) => (
                        <div 
                            class="service-image"
                        >
                            <AtomSanityImage 
                                image={imageObject.image}
                                sizes="30vw"
                                cover={true}
                            />
                        </div>
                    ))}
                </div>
            ))}
        </div>
    </div>

</section>

<style>
    .section-services-feed {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        gap: var(--space-2xl);
        padding-inline: var(--page-margin);
        padding-block: var(--space-xl);
        min-height: 100lvh;
        position: relative;
    }

    .heading,
    .subheading {
        color: var(--color-background);
        mix-blend-mode: difference;
        max-width: 12em;
    }

    .section-content {
        display: grid;
        grid-template-columns: var(--grid-template-default);
        gap: var(--space-2xl) 0;
    }

    .service-types {
        display: grid;
        grid-template-columns: subgrid;
        text-align: left;
        grid-column: 1 / span 2;
    }

    .service-types:has(.service-type__button:hover, .service-type__groups:hover) .service-type:not(:has(:hover, .service-type__groups:hover)) .service-type__button {
        opacity: 0.5;
    }

    .service-type {
        display: grid;
        grid-template-columns: subgrid;
        grid-column: 1 / span 2;
        /* z-index: 3; */
    }

    .service-type:has(.service-type__button:hover, .service-type__groups:hover) + .section-media > .service-image {
        opacity: 1;
    }

    /* Default visible images */
    .service-types:not(:has(.service-type__button:hover, .service-type__groups:hover)) :is(
        .section-media:nth-of-type(8n + 2) > .service-image:nth-child(3n + 2),
        .section-media:nth-of-type(8n + 4) > .service-image:nth-child(3n + 2),
        .section-media:nth-of-type(8n + 6) > .service-image:nth-child(3n + 3)) {
        opacity: 1;
    }

    .service-type__button {
        margin: 0;
        transition: opacity var(--anim-md);
        padding-block: 0 0.4em;
        background-color: transparent;
        text-decoration: none;
    }

    .service-type__button:hover + .services .service-type__groups,
    .service-type__groups:hover {
        translate: 0 0;
        opacity: 1;
        z-index: 3;
    }

    .service-type__button:hover + .services > .service-type__groups,
    .service-type__groups:hover {
        pointer-events: all;
    }

    .services {
        position: relative;
    }

    .service-type__groups {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        max-width: 40rem;
        opacity: 0;
        translate: 0 0.5em;
        display: flex;
        flex-direction: column;
        gap: var(--space-xl);
        transition: opacity var(--anim-sm), translate var(--anim-sm);
        pointer-events: none;
        padding-block: 0 var(--space-lg);
    }

    .service-type__group {
        display: flex;
        /* flex-direction: row;
        flex-wrap: wrap; */
        align-items: flex-start;
        gap: var(--space-2xs);
    }

    .service-type__group-title {
        flex: 0 0 100%;
        text-decoration: none;
    }

    .service-type__services {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: flex-start;
        gap: var(--space-2xs);
    }

    .section-media {
        display: grid;
        grid-template-columns: 2fr 1fr 1.5fr 1fr 1fr 1fr;
        grid-template-rows: repeat(3, 1fr);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        aspect-ratio: 16 / 9;
        justify-items: flex-end;
        justify-items: stretch;
        align-items: stretch;
        z-index: -1;
        pointer-events: none;
    }

    /* First Service */
    .section-media:nth-of-type(8n + 2) .service-image:nth-child(3n + 1) {
        grid-column: 2 / span 1;
        grid-row: 1 / span 1;
    }

    .section-media:nth-of-type(8n + 2) .service-image:nth-child(3n + 2) {
        grid-column: 5 / span 1;
        grid-row: 1 / span 1;
    }

    .section-media:nth-of-type(8n + 2) .service-image:nth-child(3n + 3) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
    }

    /* Second Service */
    .section-media:nth-of-type(8n + 4) .service-image:nth-child(3n + 1) {
        grid-column: 6 / span 1;
        grid-row: 1 / span 1;
    }

    .section-media:nth-of-type(8n + 4) .service-image:nth-child(3n + 2) {
        grid-column: 4 / span 1;
        grid-row: 2 / span 1;
    }

    .section-media:nth-of-type(8n + 4) .service-image:nth-child(3n + 3) {
        grid-column: 4 / span 1;
        grid-row: 3 / span 1;
    }

    /* Third Service */
    .section-media:nth-of-type(8n + 6) .service-image:nth-child(3n + 1) {
        grid-column: 2 / span 1;
        grid-row: 2 / span 1;
    }

    .section-media:nth-of-type(8n + 6) .service-image:nth-child(3n + 2) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
    }

    .section-media:nth-of-type(8n + 6) .service-image:nth-child(3n + 3) {
        grid-column: 5 / span 1;
        grid-row: 3 / span 1;
    }

    /* Fourth Service */
    .section-media:nth-of-type(8n + 8) .service-image:nth-child(3n + 1) {
        grid-column: 4 / span 1;
        grid-row: 1 / span 1;
    }

    .section-media:nth-of-type(8n + 8) .service-image:nth-child(3n + 2) {
        grid-column: 6 / span 1;
        grid-row: 2 / span 1;
    }

    .section-media:nth-of-type(8n + 8) .service-image:nth-child(3n + 3) {
        grid-column: 3 / span 1;
        grid-row: 3 / span 1;
    }

    .service-image {
        width: 100%;
        height: 100%;
        min-width: 0;
        min-height: 0;
        object-fit: cover;
        pointer-events: none;
        opacity: 0;
        transition: opacity var(--anim-md);
    }
</style>