---
import { getCollection } from "astro:content";
import ProjectCard from "../projects/global-ProjectCard.astro";
import { getTranslationString } from "../../../lib/translations";

const { section, brand, projects, heading, subheading, locale, key } = Astro.props

let feedProjects

if (section && section.projects) {
    feedProjects = section.projects
} else if (projects) {
    feedProjects = projects
} else {
    const allProjects = await getCollection('projects')
    feedProjects = allProjects.filter((project) => project.data.agencyBrand.name === brand)
}


let localeHeading

if (locale && section?.heading?.translations?.[locale]) {
    localeHeading = section.heading.translations[locale]
} else if (section?.heading?.text) {
    localeHeading = section?.heading.text
} else {
    localeHeading = heading
}

let localeSubheading

if (locale && section?.subheading?.translations?.[locale]) {
    localeSubheading = section?.subheading.translations?.[locale]
} else if (section?.subheading?.text) {
    localeSubheading = section?.subheading.text
} else {
    localeSubheading = subheading
}
---
<section class="section-projects-feed" data-pagefind-ignore>
    <div 
        class="section-title"
        data-animate-viewport="true"
        data-animation="fade"
    >
        {localeHeading && <h2 class="h5">{getTranslationString(localeHeading, locale)}</h2>}
        {localeSubheading && <p class="caption">{getTranslationString(localeSubheading, locale)}</p>}
    </div>
    <div class="section-content">
        {feedProjects.slice(0, 3).map((project, i) => (
            <div 
                class="project-card-wrapper"
                data-animate-viewport="true"
                data-animation="fade"
                data-animation-delay={150 * i}
            >
                <ProjectCard
                    project={project.data ? project.data : project}
                    locale={locale}
                />
            </div>
        ))}
    </div>
</section>

<style>
    .section-projects-feed {
        overflow-x: clip;
        padding-block: var(--space-3xl) var(--space-3xl);
        display: flex;
        flex-direction: column;
        gap: var(--space-sm);
    }

    .section-title,
    .section-content {
        padding-inline: var(--page-margin);
    }

    .section-content {
        display: flex;
        flex-direction: row;
        justify-content: stretch;
        gap: var(--space-sm);
    }

    .project-card-wrapper {
        flex: 0 1 50%;
    }

    @media screen and (width < 768px) {

        .section-content {
            overflow-x: auto;
            padding-inline: var(--page-margin);
            padding-bottom: var(--space-xl);
        }

        .project-card-wrapper {
            min-width: 60vw;
        }
    }


</style>