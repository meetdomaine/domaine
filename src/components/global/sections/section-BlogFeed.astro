---
import { sanityClient } from "sanity:client";
import BlogCard from "../blog/global-BlogCard.astro";
import { blogCardFields } from "../../../lib/cms-queries"
import AtomSanityImage from "../atoms/atom-sanityImage.astro";
import AtomTag from "../atoms/atom-tag.astro";
import GlobalBlogTile from "../blog/global-BlogTile.astro";
import { formatDate } from "../../../lib/format-date";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getLocaleUrl, getTranslationString } from "../../../lib/translations";
import { getCollection } from "astro:content";
import { getEntry } from "astro:content";
import { Translations } from "../../../lib/locales";

const { section, brand, heading, subheading, posts, sidebarTitle, locale } = Astro.props

let blogPosts
let featuredPost
let featuredPostDate
let sidebarTitleText

if (section?.featuredCategory) {
    const category = await getEntry('blogCategories', section.featuredCategory.slug.current)
    blogPosts = await Promise.all(category.data.posts.map(async (post) => await getEntry('blogPosts', post.slug.current)))
    sidebarTitleText = sidebarTitle ? sidebarTitle : section.featuredCategory.title
} else if (posts) {
    blogPosts = posts
    sidebarTitleText = sidebarTitle ? sidebarTitle : locale ? Translations.INSIGHTS.locales[locale] : Translations.INSIGHTS.name
} else {
    const allBlogPosts = await getCollection('blogPosts')
    blogPosts = allBlogPosts.filter((blogPost) => blogPost.data.agencyBrand.name === brand)
    sidebarTitleText = sidebarTitle ? sidebarTitle : locale ? Translations.INSIGHTS.locales[locale] : Translations.INSIGHTS.name
}

if (section?.featuredPost) {
    featuredPost = await getEntry('blogPosts', section.featuredPost.slug.current)
} else {
    featuredPost = blogPosts.shift()
}

if (featuredPost) {
    featuredPostDate = formatDate(featuredPost.data.postDate)
}
---
<section class="section-blog-feed" data-color-scheme="brand-01" data-pagefind-ignore>
    <div class="section-title">
        {(section?.heading || heading) && 
            <h2 class="h5">{section?.heading ? getTranslationString(section.heading, locale) : heading ? getTranslationString(heading, locale) : "Insights"}</h2>
        }
    </div>

    {featuredPost && 
        <div class="section-hero">
            <article class="featured-post">
                <a 
                    class="featured-post-image" 
                    href={getLocaleUrl(`${brand === 'studio' ? '/studio' : ''}/insights/${featuredPost.data.category.slug.current}/${featuredPost.data.slug.current}`, locale)}
                >
                    <AtomSanityImage 
                        image={featuredPost.data.thumbnailImage.image}
                        sizes="50vw"
                        aspectRatio={3 / 4}
                    />
                </a>
                <div class="featured-post-content">
                    <div class="featured-post-info">
                        <AtomTag 
                            text={getTranslationString(featuredPost.data.category.title, locale)}
                            url={getLocaleUrl(`${featuredPost.data.agencyBrand.slug.current}insights/${featuredPost.data.category.slug.current}`, locale)}
                        />
                        {featuredPostDate && <p class="featured-post-date">{featuredPostDate}</p>}
                    </div>
                    <a 
                        class="featured-post-heading h2" 
                        href={getLocaleUrl(`${brand === 'studio' ? '/studio' : ''}/insights/${featuredPost.data.category.slug.current}/${featuredPost.id}`, locale)}
                    >
                        {getTranslationString(featuredPost.data.title.text, locale)}
                    </a>
                    <p class="">{getTranslationString(featuredPost.data.excerpt.text, locale)}</p>
                </div>
            </article>
            <aside class="sidebar" data-color-scheme="glass-dark">
                <p class="sidebar-heading">{getTranslationString(sidebarTitleText, locale)}</p>
                <div class="sidebar-posts">
                    {blogPosts.slice(0, 3)?.map((post) => (
                        <GlobalBlogTile 
                            post={post.data}
                            currentBrand={brand}
                            locale={locale}
                        />
                    ))}
                </div>
            </aside>
        </div>
    }
    {blogPosts.length >= 6 &&
        <div class="section-posts">
            {blogPosts.slice(3, 6)?.map((post) => (
                <div class="blog-card-wrapper">
                    <BlogCard 
                        title={post.data.title}
                        series={post.data.series}
                        postDate={post.data.postDate}
                        thumbnailImage={post.data.thumbnailImage}
                        slug={post.data.slug}
                        category={post.data.category}
                        agencyBrand={post.data.agencyBrand}
                        locale={locale}
                    />
                </div>
            ))}
        </div>
    }
</section>


<style>
    .section-blog-feed {
        --gap: var(--space-sm);
        padding-inline: var(--page-margin);
        padding-block: var(--space-4xl);
        display: flex;
        flex-direction: column;
        align-items: stretch;
        gap: var(--gap);
    }

    .section-hero {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: space-between;
        gap: var(--gap);
    }

    .featured-post {
        display: flex;
        flex-direction: row;
        gap: var(--gap);
        flex: 0 0 66.66%;
    }

    .featured-post-image {
        flex: 0 0 calc(50% - var(--gap) / 2);
        border-radius: var(--radius-sm);
        overflow: hidden;
    }

    .featured-post-content {
        display: flex;
        flex-direction: column;
        gap: var(--gap);
        align-items: flex-start;
    }

    .featured-post-heading {
        text-decoration: none;
    }

    .featured-post-info {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: var(--space-xs);
    }

    .featured-post-date {
        margin: 0;
    }

    .sidebar {
        display: flex;
        flex-direction: column;
        gap: var(--space-xs);
        flex: 0 1 25rem;
        /* max-width: 100%; */
        padding-block: var(--space-sm) 0;
        padding-inline: var(--space-sm);
        border-radius: var(--radius-sm);
        /* flex: 1 0 30%; */
    }

    .sidebar-heading {
        margin: 0;
    }

    .sidebar-posts {
        display: flex;
        flex-direction: column;
        /* gap: var(--space-xs); */
    }

    .section-posts {
        display: flex;
        flex-direction: row;
        gap: var(--gap);
    }

    .blog-card-wrapper {
        flex: 1 0 calc(33% - var(--gap) * 2);
    }

    @media screen and (max-width: 1024px) {
        .section-hero {
            /* align-items: flex-end; */
        }

        .featured-post {
            flex: 0 0 calc(50% - var(--gap) / 2);
            /* flex-direction: column-reverse; */
            flex-direction: column;
        }
    }

    @media screen and (max-width: 768px) {
        .section-blog-feed {
            padding-inline: 0;
        }

        .section-title,
        .section-hero,
        .section-posts {
            padding-inline: var(--page-margin);
        }

        .section-hero {
            flex-direction: column;
            align-items: stretch;
            gap: var(--space-lg);
        }

        .featured-post {
            flex: 0 0 calc(50% - var(--gap) / 2);
            flex-direction: column;
        }

        .section-posts {
            overflow-x: auto;
            /* gap: var(--gap); */
        }

        .blog-card-wrapper {
            min-width: 60%;
        }
    }
</style>