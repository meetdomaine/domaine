---
import AtomButton from "../atoms/atom-button.astro";
import AtomSanityImage from "../atoms/atom-sanityImage.astro";

const { section, brand, key } = Astro.props
const colorSchemes = ['brand-03', 'default', 'brand-02', 'secondary']
---
<section class="section-service-cards">
  {section.services.map((serviceEntry, i) => (
    <div class="service-card" data-color-scheme={colorSchemes[i % 4]} style={`--index: ${i};`}>
      <div class="card-header">
        <p class="utility">{(i + 1).toLocaleString('en-US', {
            minimumIntegerDigits: 2,
            useGrouping: false
          })}
        </p>
        <p class="utility">{serviceEntry.service.title}</p>
      </div>
      <div class="card-content">
        <div class="card-text">
        <div class="card-title">
          <a class="service-title" href={`${brand === "studio" ? "/studio" : ""}/services/${serviceEntry.service.slug.current}`}><h2 class="h1">{serviceEntry.service.title}</h2></a>
          <div class="card-details">
            <p>{serviceEntry.service.description}</p>
            {serviceEntry.showButton &&
              <AtomButton 
                text="Learn More"
                url={`${brand === "studio" ? "/studio" : ""}/services/${serviceEntry.service.slug.current}`}
                style="primary"
              />
            }
          </div>
        </div>
        <div class="service-groups">
          {serviceEntry.service.serviceGroups.map((serviceGroup) => {
            if (serviceEntry.enableServiceLinks) return (
              <a href={`${brand === "studio" ? "/studio" : ""}/services/${serviceEntry.service.slug.current}/${serviceGroup.slug.current}`} class="service-group h5">{serviceGroup.title}</a>
            )
            return (
              <p class="service-group h5">{serviceGroup.title}</p>
            )
          })}
        </div>
      </div>
      
      <div class="card-media">
        <AtomSanityImage 
          sizes="50vw"
          image={serviceEntry.thumbnailImage.image}
          cover={true}
        />
      </div>

    </div>

    </div>
  ))}
</section>

<style>

  .section-service-cards {
    padding-block: 0 var(--space-xl);
    display: flex;
    flex-direction: column;
    align-content: stretch;
  }

  .service-card {
    --stack-height: var(--space-2xl);
    padding-inline: var(--page-margin);
    padding-block: 0 var(--space-2xl);
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    align-items: stretch;
    background-color: var(--color-background);
    position: sticky;
    top: calc(var(--stack-height) * var(--index) + var(--header-height) );
    border-radius: var(--radius-lg);
    flex: 0 0 calc(100lvh - var(--header-height) - var(--stack-height) * var(--index));
  }

  .card-header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    height: var(--stack-height);
    flex: 0 0 auto;
  }

  .card-content {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--space-md);
    flex: 0 1 100%;
  }

  .card-text {
    flex: 0 1 30rem;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: var(--space-xl);
  }

  .card-title {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-md);
  }

  .service-title {
    text-decoration: none;
  }

  .card-details {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-sm);
  }

  .service-groups {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-sm);
  }

  .service-group {
    text-decoration: none;
  }

  .card-media {
    flex: 0 1 50%;
    max-height: 100%;
    border-radius: var(--radius-sm);
    overflow: hidden;
  }

  @media screen and (width <= 768px) {
    .service-card {
      /* flex-direction: column;
      justify-content: flex-start;
      align-items: stretch; */
      /* gap: var(--space-lg); */
      flex: 0 0 auto;
    }

    .card-content {
      /* flex: 0 0 auto; */
      flex-direction: column;
      gap: var(--space-md);
      justify-content: flex-start;
    }

    .card-text {
      flex: 0 0 auto;
    }

    .card-media {
      flex: 0 0 auto;
    }
  }

</style>