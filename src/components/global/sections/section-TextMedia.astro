---
import { Icon } from "astro-icon/components"
import AtomButton from "../atoms/atom-button.astro"
import SanityMedia from "../atoms/atom-sanityMedia.astro"
import { replaceStringIcons } from "../../global/utils/inline-icon-text"

const { section, brand } = Astro.props

const iconText = replaceStringIcons(section.heading)
---
{section.showSection && 
    <section class="section-text-media" data-layout={section.layout}>

        <div class="section-content">
            <div class="section-text">
                {section.eyebrow && <p class="eyebrow utility">{section.eyebrow}</p>}
                <h2 class="heading h3"><Fragment set:html={iconText} /></h2>
                {section.text && <p>{section.text}</p>}
                {section.buttonPrimary && section.buttonPrimary.text && section.buttonPrimary.url &&
                    <AtomButton 
                        text={section.buttonPrimary.text}
                        url={section.buttonPrimary.url}
                        newTab={section.buttonSecondary.newTab}
                        style="secondary"
                        icon="arrow-diagonal"
                    />
                }
            </div>
            {section.buttonSecondary && section.buttonSecondary.text && section.buttonSecondary.url &&
                <AtomButton 
                    text={section.buttonSecondary.text}
                    url={section.buttonSecondary.url}
                    newTab={section.buttonSecondary.newTab}
                    style="tertiary"
                    icon="arrow-diagonal"
                />
            }
        </div>
        <div class="section-media">
            <SanityMedia 
                video={section.media.video}
                aspectRatio={3 / 4}
                image={section.media.image}
                sizes="50vw"
            />
        </div>
    </section>
}

<script>
    import { addParallax, fadeUp, gsap } from "../../global/utils/gsap"

    const animateSection = () => {
        const sections = document.querySelectorAll('.section-text-media')
        sections.forEach((section) => {
            const sectionMedia = section.querySelector('.section-media')
            const video = sectionMedia.querySelector('mux-player')
            const image = sectionMedia.querySelector('img')
            if (video) addParallax(video)
            if (image) addParallax(image)
        })
    }

    window.addEventListener("preload:complete", () => {
        animateSection()
    })
</script>

<style>
    .section-text-media {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: stretch;
        padding-inline: var(--page-margin);
        padding-block: var(--space-lg);
        gap: var(--space-xl);
    }

    .section-text-media[data-layout="mediaLeft"] {
        flex-direction: row-reverse;
    }

    .section-content {
        flex: 1 0 50%;
        max-width: 35em;
    }

    .section-text {
        display: flex;
        flex-direction: column;
        gap: var(--space-xs);
    }

    .heading .inline-icon {
        width: 1em;
        height: 1em;
    }

    .section-media {
        flex: 0 0 40%;
        border-radius: var(--radius-sm);
        overflow: hidden;
        height: auto;
        aspect-ratio: 3 / 4;
    }

    .section-content {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: space-between;
    }

    .section-text {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

</style>