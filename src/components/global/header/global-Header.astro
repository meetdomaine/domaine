---
import { Icon } from "astro-icon/components";
import { sanityClient } from "sanity:client";
import { imageFields, videoFields } from "../utils/cms-queries";
import ContactMenu from "./global-ContactMenu.astro";
import GlobalSearchMenu from "./searchMenu/global-SearchMenu.astro";
import BrandToggle from './global-BrandToggle.astro'
import GlobalNavigationMenu from "./global-NavigationMenu.astro";
import BrandMenu from "./global-BrandMenu.astro";

const { headerSettings, currentBrand, activePath } = Astro.props;

// const brandIndex = brands.findIndex(brand => brand.path == currentBrand.url )
const defaultBlogPosts = await sanityClient.fetch(`*[_type == "type_blog" ]{title, slug, thumbnailImage{${imageFields}}, category->{slug}, postDate } | order( postDate desc)[0...3]`)
const defaultProjects = await sanityClient.fetch(`*[_type == "type_project"]{orderRank, title, slug, thumbnailMedia{${videoFields}, ${imageFields}} } | order( orderRank asc)[0...5]`)
const defaultFeatures = await sanityClient.fetch(`*[_type == "type_projectFeature"]{title, slug, orderRank } | order( orderRank asc)[0...10]`)
const defaultPartners = await sanityClient.fetch(`*[_type == "type_partner"]{title, slug, orderRank } | order(orderRank)[0...10]`)
// console.log(brands[brandIndex])
// console.log(currentBrand)
---
<header id="header" class="glass-dark">

    <div class="header-content">

        <button id="menu-button-mobile" class="utility-button menu-button">
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
        </button>

        <div class="brand glass-dark">

            <a href={currentBrand.url} class="brand-logo">
                <Fragment set:html={currentBrand.logo} />
            </a>
            <button class="brand-button button-reset" popovertarget="brand-menu">
                <span class="brand-button__box"></span>
                <span class="brand-button__box"></span>
                <span class="brand-button__box"></span>
                <span class="brand-button__box"></span>
            </button>
        </div>
        
        <GlobalNavigationMenu 
            links={headerSettings.navigationLinks.links}
            activePath={activePath}
        />

        <div id="utility-menu" class="utility-menu">
            <button class="utility-button notification-button glass-dark">
                <Icon name="pixel_bell" class="utility-icon" />
            </button>
            <button class="utility-button contact-button glass-dark" popovertarget="contact-menu">
                <Icon name="pixel_email" class="utility-icon" />
            </button>
        </div>

    </div>

    <BrandMenu 
        currentBrand={currentBrand}
        brandMenuHeading={headerSettings.brandMenuHeading}
        brandMenuSubheading={headerSettings.brandMenuSubheading}
        brandMenuBrands={headerSettings.brandMenuBrands}
    />

    <ContactMenu 
        hubspotFormId={headerSettings.hubspotFormId}
        processConsentMessage={headerSettings.processConsentMessage}
        marketingConsentMessage={headerSettings.marketingConsentMessage}
    />

    <GlobalSearchMenu 
        defaultBlogPosts={defaultBlogPosts}
        defaultProjects={defaultProjects}
        defaultFeatures={defaultFeatures}
        defaultPartners={defaultPartners}
    />
</header>

<script is:inline>
    const loadSearch = async () => {
        window.pagefind = await import("/pagefind/pagefind.js");
    }
    loadSearch()
</script>

<script>

    document.addEventListener("DOMContentLoaded", async () => {

        const navigationMenu: HTMLElement = document.getElementById('navigation-menu');
        const header: HTMLElement = document.getElementById('header');
        const menuButtonMobile: HTMLElement = document.getElementById('menu-button-mobile')

        menuButtonMobile.addEventListener("click", (e) => {
            if (navigationMenu) header.classList.toggle("navigation-open")
        })

    })
</script>

<style>

    header {
        position: fixed;
        top: 0;
        z-index: 999;
    }

    .header-content {
        display: grid;
        grid-template-columns: 1fr 1.5fr 1fr;
        align-items: flex-start;
    }


    .brand-logo {
        max-width: 90px;
    }

    .brand-logo :global(svg) {
        height: 100%;
        max-width: 90px;
        vertical-align: middle;
    }

    .brand-button {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        aspect-ratio: 1 / 1;
        gap: 3px;
        padding: 4px;
    }

    .brand-button__box {
        aspect-ratio: 1 / 1;
        background-color: var(--color-foreground);
        opacity: 0.5;
        transition: opacity var(--anim-sm);

    }

    .brand-button:hover .brand-button__box {
        opacity: 1;
    }

    .navigation-links {
        display: flex;
    }

    .navigation-link {
        text-decoration: none;
    }

    .search-button {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        gap: var(--space-xs);
        width: 100%;
    }

    .search-button em {
        font-style: normal;
        color: var(--color-dark);
    }

    .utility-menu {
        justify-self: flex-end;
        display: flex;
        flex-direction: row;
        gap: var(--space-2xs);
    }

    .utility-button {
        min-width: 0;
        aspect-ratio: 1 / 1;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        flex: 0 0 auto;
        color: var(--color-foreground);
    }

    .utility-icon {
        height: 50%;
        position: absolute;
        top: 50%;
        left: 50%;
        translate: -50% -50%;
    }

    @media screen and (width > 768px) {
        header {
            --header-top-margin: var(--space-xs);
            height: var(--header-height);
            width: 100%;
            backdrop-filter: none;
            -webkit-backdrop-filter: none;
            background-color: transparent;
            padding-inline: var(--page-margin);
            padding-block: var(--header-padding-block);
        }

        .header-content {
            background-color: transparent;
            display: grid;
            grid-template-columns: 1fr 1.5fr 1fr;
            gap: var(--space-sm);
        }

        .menu-button {
            display: none;
        }

        .brand {
            border-radius: var(--radius-sm);
            padding: 12px;
            justify-self: flex-start;
            display: flex;
            flex-direction: row;
            align-items: stretch;
            height: var(--header-element-height);
            gap: var(--space-sm);
        }

        .utility-button {
            height: var(--header-element-height);
            width: var(--header-element-height);
        }
    }

    @media screen and (width <= 768px) {
        header {
            --header-top-margin: var(--space-xs);
            height: var(--header-height);
            width: calc(100% - var(--page-margin) * 2);
            display: flex;
            flex-direction: row;
            justify-content: stretch;
            align-items: flex-start;
            border-radius: var(--radius-sm);
            transition: width var(--anim-sm), margin var(--anim-sm), height var(--anim-sm), padding var(--anim-sm), border-radius var(--anim-sm);
        }

        header.navigation-open {
            width: 100%;
            height: 100lvh;
            border-radius: 0;
        }
        
        header,
        header.navigation-open .header-content {
            margin-top: var(--header-top-margin);
            margin-inline: var(--page-margin);
        }

        header.navigation-open,
        .header-content {
            margin: 0;
        }

        .header-content {
            width: calc(100vw - var(--page-margin) * 2);
            background-color: transparent;
            color: var(--color-lightest);
            transition: background-color var(--anim-sm);
            border-radius: var(--radius-sm) var(--radius-sm) 0 0;
            transition: width var(--anim-sm), margin var(--anim-sm), height var(--anim-sm), padding var(--anim-sm), border-radius var(--anim-sm), background-color var(--anim-sm), color var(--anim-sm);
        }

        header.navigation-open .header-content {
            --color-foreground: var(--color-darkest);
            background-color: var(--color-lightest);
            color: var(--color-foreground);
            top: calc( var(--header-top-margin) + var(--header-height));
        }

        .menu-button {
            position: relative;
        }

        .hamburger-line {
            width: 25%;
            height: 1px;
            background-color: currentColor;
            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -50%;
            transition: translate var(--anim-sm), rotate var(--anim-sm);
        }

        .hamburger-line:nth-child(1) {
            rotate: 0deg;
            translate: -50% 0.2em;
        }

        .hamburger-line:nth-child(2) {
            rotate: 0deg;
            translate: -50% -0.2em;
        }

        header.navigation-open .hamburger-line:nth-child(1) {
            rotate: -45deg;
            translate: -50% 0;
        }

        header.navigation-open .hamburger-line:nth-child(2) {
            rotate: 45deg;
            translate: -50% 0;
        }

        .brand {
            background: transparent;
            background-color: transparent;
            backdrop-filter: none;
            -webkit-backdrop-filter: none;
            height: var(--header-height);
            display: flex;
            place-content: center;
        }

        .brand-logo {
            height: 100%;
            width: auto;
            display: flex;
            max-width: none;
            justify-content: center;
            align-items: center;
            opacity: color var(--anim-sm);
        }

        header.navigation-open .brand-logo {
            color: var(--color-darkest);
        }

        .brand-logo :global(svg) {
            max-height: 25%;
            max-width: none;
        }

        .brand-button {
            display: none;
        }

        .notification-button,
        .icon-expand {
            display: none;
        }

        .utility-menu {
            height: auto;
        }

        .utility-button {
            /* border: 1px solid var(--color-background); */
            background-color: transparent;
            backdrop-filter: none;
            -webkit-backdrop-filter: none;
            height: var(--header-height);
            color: currentColor;
        }

    }

</style>