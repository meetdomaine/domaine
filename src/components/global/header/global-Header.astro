---
import ContactMenu from "./global-ContactMenu.astro";
import SearchMenu from "./searchMenu/SearchMenu"
import NavigationMenu from "./global-NavigationMenu.astro";
import BrandMenu from "./global-BrandMenu.astro";
import NotificationMenu from "./global-NotificationMenu.astro";
import IconBell from '../../../icons/icon-bell.svg'
import IconX from '../../../icons/icon-x.svg'
import IconEmail from '../../../icons/icon-email.svg'
import IconMenuBox from '../../../icons/icon-menu-box.svg'
import LogoDomaine from '../../../icons/domaine-wordmark.svg'
import LogoStudio from '../../../icons/domaine-studio.svg'
import { getRelativeLocaleUrl } from "astro:i18n";
import { Brands } from "../../../enums/brands";
import { getBlogPosts, getProjects, getProjectFeatures, getPartners } from "../../../lib/cached-content";
import { loadQuery } from "../../../lib/sanity-load-query";
import { imageFields, videoFields } from "../../../lib/cms-queries";

const { currentBrand, activePath, searchExposed, locale, brand } = Astro.props;


const defaultBlogPosts = await getBlogPosts(brand)
const defaultProjects = await getProjects(brand)
const defaultProjectFeatures = await getProjectFeatures(brand)
const defaultPartners = await getPartners(brand)

const headerId = brand === Brands.STUDIO ? 'settings_header--studio' : 'settings_header--domaine'
const { data: headerSettings } = await loadQuery({ 
  query: `*[_type == "settings_header" && _id == $headerId][0]{
    ...,
    locationClocks[]->{
      ...,
      agencyBrand->{slug},
      images[]{${imageFields}},
      metafields{ title, description, image{crop, asset->{_id, metadata}, hotspot} },
    },
    linkCardImage{${imageFields}},
    brandMenuBrands[]{
        ..., 
        media{video{ asset->{playbackId, assetId, filename} }, ${imageFields}} 
    }
  }`,
  params: { headerId }
})
---
<header id="header" data-color-scheme="glass-dark">

    <div class="header-content">

        <button id="menu-button-mobile" class="utility-button menu-button">
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
        </button>

        <div class="brand" data-color-scheme="glass-dark">
            <a href={locale ? getRelativeLocaleUrl(locale, currentBrand.url) : currentBrand.url} class="brand-logo">
                {brand === Brands.STUDIO ? <LogoStudio /> : <LogoDomaine /> }
                <!-- <Icon name={currentBrand.slug.current === "/studio" ? "domaine-studio" : "domaine-wordmark"} /> -->
            </a>
            {headerSettings.showBrandMenu &&
                <button class="brand-button button-reset" popovertarget="brand-menu">
                    {/* <Icon name="icon-menu-box" class="brand-menu-icon" /> */}
                    <IconMenuBox class="brand-menu-icon" />
                </button>
            }
        </div>
        
        <NavigationMenu 
            links={headerSettings.navigationLinks.links}
            activePath={activePath}
            searchExposed={searchExposed}
            locale={locale}
            searchPlaceholderTitle={headerSettings.searchPlaceholderTitle}
            searchPlaceholderText={headerSettings.searchPlaceholderText}
        />

        <div id="utility-menu" class="utility-menu">
            <button id="notification-toggle" class="utility-button notification-button" data-color-scheme="glass-dark" popovertarget="notification-menu" data-active="false">
                 <IconBell class="utility-icon icon-open" />
                 <IconX class="utility-icon icon-close" />
            </button>
            <button class="utility-button contact-button" data-color-scheme="glass-dark" popovertarget="contact-menu">
                <!-- <Icon name="icon-email" class="utility-icon" /> -->
                <IconEmail class="utility-icon" />
            </button>
        </div>

    </div>

    {headerSettings.showBrandMenu &&
        <BrandMenu 
            currentBrand={currentBrand}
            heading={headerSettings.brandMenuHeading}
            subheading={headerSettings.brandMenuSubheading}
            locale={locale}
        />
    }
    <ContactMenu 
        hubspotFormId={headerSettings.hubspotFormId} 
        forms={headerSettings.contactForms} 
        locale={locale}
    />

    <SearchMenu 
        client:only="solid-js"
        defaultBlogPosts={defaultBlogPosts.slice(0, 3)}
        defaultProjects={defaultProjects.slice(0, 4)}
        defaultFeatures={defaultProjectFeatures.slice(0, 8)}
        defaultPartners={defaultPartners.slice(0, 5)}
        currentBrand={currentBrand}
        locale={locale}
        brand={brand}
    />

    <!-- <NotificationMenu
        content={headerSettings}
        currentBrand={currentBrand} 
        locale={locale}
        brand={brand}
    /> -->
</header>

<script is:inline>
    const loadSearch = async () => {
        window.pagefind = await import("/pagefind/pagefind.js");
    }
    loadSearch()
</script>

<script>

    document.addEventListener("DOMContentLoaded", async () => {

        const navigationMenu: HTMLElement = document.getElementById('navigation-menu');
        const header: HTMLElement = document.getElementById('header');
        const menuButtonMobile: HTMLElement = document.getElementById('menu-button-mobile')

        menuButtonMobile.addEventListener("click", (e) => {
            if (navigationMenu) header.classList.toggle("navigation-open")
        })

    })
</script>

<style>

    header {
        position: fixed;
        top: 0;
        z-index: 999;
    }

    .header-content {
        display: grid;
        grid-template-columns: 1fr 1.5fr 1fr;
        align-items: flex-start;
    }

    .brand {
        justify-content: center;
        align-items: center;
    }

    .brand-logo {
        display: flex;
        justify-content: center;
        align-items: stretch;
        /* align-items: center; */
        height: 30%;
    }

    .brand-logo :global(svg) {
        height: 100%;
        width: auto;
        /* max-height: 80%; */
        /* align-self: stretch; */
    }

    .brand-button {
        display: flex;
        aspect-ratio: 1 / 1;
        justify-content: center;
        align-items: center;
        height: calc(100% - var(--space-2xs) * 2);
        width: auto;
        width: 1.5rem;
    }

    .brand-menu-icon {
        opacity: 0.5;
        width: 100%;
        height: auto;
        transition: opacity var(--anim-sm);
    }

    .brand-button:hover .brand-menu-icon {
        opacity: 1;
    }

    .navigation-links {
        display: flex;
    }

    .navigation-link {
        text-decoration: none;
    }

    .search-button {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        gap: var(--space-xs);
        width: 100%;
    }

    .search-button em {
        font-style: normal;
        color: var(--color-dark);
    }

    .utility-menu {
        justify-self: flex-end;
        display: flex;
        flex-direction: row;
        gap: var(--space-2xs);
    }

    .utility-button {
        min-width: 0;
        aspect-ratio: 1 / 1;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        flex: 0 0 auto;
        color: var(--color-foreground);
    }

    .notification-button .icon-open,
    .notification-button .icon-close {
        opacity: 1;
        transition: opacity var(--anim-sm);
    }

    .notification-button[data-active="true"] .icon-open {
        opacity: 0;
    }

    .notification-button::after {
        content: "";
        position: absolute;
        width: 5px;
        height: 5px;
        background-color: var(--color-brand);
        top: 25%;
        right: 25%;
        border-radius: 100vw;
    }

    .notification-button[data-active="false"] .icon-close {
        opacity: 0;
    }

    .utility-icon {
        height: 40%;
        position: absolute;
        top: 50%;
        left: 50%;
        translate: -50% -50%;
    }

    @media screen and (width > 768px) {
        header {
            --header-top-margin: var(--space-xs);
            height: var(--header-height);
            width: 100%;
            backdrop-filter: none;
            -webkit-backdrop-filter: none;
            background-color: transparent;
            padding-inline: var(--page-margin);
            padding-block: var(--header-padding-block);
        }

        .header-content {
            background-color: transparent;
            display: grid;
            grid-template-columns: 1fr 1.5fr 1fr;
            gap: var(--space-sm);
        }

        .menu-button {
            display: none;
        }

        .brand {
            border-radius: var(--radius-sm);
            /* padding-inline: var(--space-xs) var(--space-2xs); */
            padding-inline: var(--space-sm);
            justify-self: flex-start;
            display: flex;
            flex-direction: row;
            align-items: center;
            height: var(--header-element-height);
            gap: var(--space-xs);
        }

        .utility-button {
            height: var(--header-element-height);
            width: var(--header-element-height);
        }
    }

    @media screen and (width <= 768px) {
        header {
            --header-top-margin: var(--space-xs);
            height: var(--header-height);
            width: calc(100% - var(--page-margin) * 2);
            display: flex;
            flex-direction: row;
            justify-content: stretch;
            align-items: flex-start;
            border-radius: var(--radius-sm);
            transition: width var(--anim-sm), margin var(--anim-sm), height var(--anim-sm), padding var(--anim-sm), border-radius var(--anim-sm);
        }

        header.navigation-open {
            width: 100%;
            height: 100lvh;
            border-radius: 0;
        }
        
        header,
        header.navigation-open .header-content {
            margin-top: var(--header-top-margin);
            margin-inline: var(--page-margin);
        }

        header.navigation-open,
        .header-content {
            margin: 0;
        }

        .header-content {
            width: calc(100vw - var(--page-margin) * 2);
            background-color: transparent;
            color: var(--color-lightest);
            transition: background-color var(--anim-sm);
            border-radius: var(--radius-sm) var(--radius-sm) 0 0;
            transition: width var(--anim-sm), margin var(--anim-sm), height var(--anim-sm), padding var(--anim-sm), border-radius var(--anim-sm), background-color var(--anim-sm), color var(--anim-sm);
        }

        header.navigation-open .header-content {
            --color-foreground: var(--color-darkest);
            background-color: var(--color-lightest);
            color: var(--color-foreground);
            top: calc( var(--header-top-margin) + var(--header-height));
        }

        .menu-button {
            position: relative;
        }

        .hamburger-line {
            width: 25%;
            height: 1px;
            background-color: currentColor;
            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -50%;
            transition: translate var(--anim-sm), rotate var(--anim-sm);
        }

        .hamburger-line:nth-child(1) {
            rotate: 0deg;
            translate: -50% 0.2em;
        }

        .hamburger-line:nth-child(2) {
            rotate: 0deg;
            translate: -50% -0.2em;
        }

        header.navigation-open .hamburger-line:nth-child(1) {
            rotate: -45deg;
            translate: -50% 0;
        }

        header.navigation-open .hamburger-line:nth-child(2) {
            rotate: 45deg;
            translate: -50% 0;
        }

        .brand {
            background: transparent;
            background-color: transparent;
            backdrop-filter: none;
            -webkit-backdrop-filter: none;
            height: var(--header-height);
            display: flex;
        }

        header.navigation-open .brand-logo {
            color: var(--color-darkest);
        }

        .brand-logo :global(svg) {
            /* height: 8s0%; */
            /* max-width: none; */
        }

        .brand-button {
            display: none;
        }

        .notification-button,
        .icon-expand {
            display: none;
        }

        .utility-menu {
            height: auto;
        }

        .utility-button {
            /* border: 1px solid var(--color-background); */
            background-color: transparent;
            backdrop-filter: none;
            -webkit-backdrop-filter: none;
            height: var(--header-height);
            color: currentColor;
        }

    }

</style>