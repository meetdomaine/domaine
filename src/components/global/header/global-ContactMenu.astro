---
import { Icon } from "astro-icon/components"

const { hubspotFormId, processConsentMessage, marketingConsentMessage } = Astro.props

const portalId = import.meta.env.HUBSPOT_PORTAL_ID
---
<dialog popover id="contact-menu" class="contact-menu color-reset" data-lenis-prevent>
    <div class="section-title">
        <h2 class="h5">Contact</h2>
        <button popovertarget="contact-menu" class="contact-close-button button-reset">
            <Icon name="pixel_x" class="close-button" />
        </button>
    </div>
    <form id="contact-form" class="contact-form">
        <div class="fields-inline">
            <div class="custom-field">
                <label for="firstname">First Name</label>
                <input type="text" name="firstname" id="firstname" placeholder="" required autofocus />
            </div>
            <div class="custom-field">
                <label for="lastname">Last Name</label>
                <input type="text" name="lastname" id="lastname" placeholder="" required />
            </div>
        </div>
        <div class="custom-field">
            <label for="email">Email</label>
            <input type="email" name="email" id="email" placeholder="" required />
        </div>
        <div class="custom-field">
            <label for="company">Company / Organization</label>
            <input type="text" name="company" id="company" placeholder="" required />
        </div>
        <div class="custom-field">
            <label for="job-title">Job Title</label>
            <input type="text" name="job-title" id="job-title" placeholder="" required />
        </div>
        <div class="custom-field">
            <label for="city">City</label>
            <input type="text" name="city" id="city" placeholder="" required />
        </div>
        <div class="custom-field">
            <label for="country">Country</label>
            <input type="text" name="country" id="country" placeholder="" required />
        </div>
        <div class="custom-field">
            <label for="current-platform">Current E-Commerce Platform</label>
            <input type="text" name="current-platform" id="current-platform" placeholder="" required />
        </div>
        <div class="custom-field">
            <p class="h6">How Can We Help?</p>
            <ul class="inputs-list toggle-button-list">
                <li class="toggle-button">
                    <input type="checkbox" id="replatform-to-shopify" name="how-can-we-help" value="Replatform to Shopify">
                    <label for="replatform-to-shopify">Replatform to Shopify</label>
                </li>
                <li class="toggle-button">
                    <input type="checkbox" id="existing-shopify-design-development" name="how-can-we-help" value="Existing Shopify Website Design & Development">
                    <label for="existing-shopify-design-development">Existing Site Design & Development</label>
                </li>
                <li class="toggle-button">
                    <input type="checkbox" id="creative-only-support" name="how-can-we-help" value="Creative and/or Design-Only Support">
                    <label for="creative-only-support">Creative Support</label>
                </li>
                <li class="toggle-button">
                    <input type="checkbox" id="strategy-services" name="how-can-we-help" value="Ecommerce Strategy Services">
                    <label for="strategy-services">E-commerce Strategy</label>
                </li>
                <li class="toggle-button">
                    <input type="checkbox" id="crm-services" name="how-can-we-help" value="CRM Services">
                    <label for="crm-services">CRM Services</label>
                </li>
            </ul>
        </div>

        <div class="custom-field">
            <p class="h6">Estimated Annual Revenue</p>
            <ul class="inputs-list toggle-button-list">
                <li class="toggle-button">
                    <input type="radio" id="under-5m" name="estimated-annual-revenue" value="Under $5M">
                    <label for="under-5m">Under $5M</label>
                </li>
                <li class="toggle-button">
                    <input type="radio" id="5m-10m" name="estimated-annual-revenue" value="$5M-$10M">
                    <label for="5m-10m">$5M-$10M</label>
                </li>
                <li class="toggle-button">
                    <input type="radio" id="10m-50m" name="estimated-annual-revenue" value="$10M-$50M">
                    <label for="10m-50m">$10M-$50M</label>
                </li>
                <li class="toggle-button">
                    <input type="radio" id="50m-100m" name="estimated-annual-revenue" value="$50M-$100M">
                    <label for="50m-100m">$50M-$100M</label>
                </li>
                <li class="toggle-button">
                    <input type="radio" id="100m-500m" name="estimated-annual-revenue" value="$100M-$500M">
                    <label for="100m-500m">$100M-$500M</label>
                </li>
                <li class="toggle-button">
                    <input type="radio" id="over-500m" name="estimated-annual-revenue" value="$500M+">
                    <label for="over-500m">$500M+</label>
                </li>
            </ul>
        </div>

        <!-- <div class="custom-field">
            <label for="estimated-annual-revenue">Estimated Annual Revenue</label>
            <select name="estimated-annual-revenue" id="estimated-annual-revenue">
                <option value="less-than-5m">Less than $5M</option>
                <option value="5m-10m">$5M to $10M</option>
                <option value="10m-50m">$10M to $50M</option>
                <option value="50m-100m">$50M to $100M</option>
                <option value="100m-500m">$100M to $500M</option>
                <option value="500m-plus">$500M+</option>
            </select>
        </div> -->
        
        <div class="custom-field">
            <label for="project-description">Project Description:</label>
            <textarea name="project-description" id="project-description" rows="4" cols="50" placeholder="" />
        </div>
        <div class="custom-field">
            <ul class="inputs-list">
                <li>
                    <input name="marketingConsent" id="marketingConsent" type="checkbox" />
                    <label for="marketingConsent" class="toggle">{marketingConsentMessage}</label>
                </li>
            </ul>
        </div>
    </form>

    <div class="submit-button">
        <div class="custom-field">
            <input type="submit" value="Submit" form="contact-form" />
        </div>
    </div>
</aside>

<script define:vars={{ portalId, hubspotFormId, processConsentMessage, marketingConsentMessage }}>
    const contactForm = document.querySelector("#contact-form")
    const marketingConsent = contactForm.querySelector("#marketingConsent")

    const sumbitForm = async () => {

        const formData = new FormData(contactForm);

        const formBody = {
            fields: [],
            legalConsentOptions: {
                consent: { // Include this object when GDPR options are enabled
                    consentToProcess: true,
                    text: processConsentMessage,
                    communications: [
                        {
                            "value": marketingConsent.value === "on" ? true : false,
                            "subscriptionTypeId": 999,
                            "text": marketingConsentMessage
                        }
                    ]
                }
            }
        }
        

        for (const field of formData) {
            const fieldName = field[0]
            const fieldValue = field[1]
            const fieldType = fieldName === "company" ? "0-2" : "0-1"
            formBody.fields.push({
                objectTypeId: fieldType,
                name: fieldName,
                value: fieldValue
            })
        }

        try {
            const response = await fetch(`https://api.hsforms.com/submissions/v3/integration/submit/${portalId}/${hubspotFormId}`, {
                method: "POST",
                body: JSON.stringify(formBody),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                }
            })
            console.log(await response.json())
        } catch(e) {
            console.log(e)
        }
    }

    contactForm.addEventListener("submit", (e) => {
        // console.log(e)
        e.preventDefault();
        sumbitForm();  
    })

</script>


<style>
    .contact-menu {
        --inset: var(--space-sm);
        border: none;
        margin: auto var(--inset) auto auto;
        height: calc(100% - var(--inset) * 2);
        max-width: 40rem;
        background-color: var(--color-background);
        border-radius: var(--radius-md);
        position: fixed;
        width: calc(100% - var(--inset) * 2);
        translate: calc(100% + var(--inset) + var(--page-margin)) 0;
        padding-inline: 0;
        padding-block: 0;
        z-index: 19;
        flex-direction: column;
        display: flex;
        justify-content: space-between;
        transition: translate var(--anim-md), display var(--anim-md) allow-discrete;
    }

    .contact-menu:popover-open {
        translate: 0 0;
        display: flex;
    }

    .contact-menu::backdrop {
        background-color: var(--background-blur-color);
        backdrop-filter: var(--background-blur);
        -webkit-backdrop-filter: var(--background-blur);
        width: 100%;
        height: 100%;
        opacity: 1;
    }

    @starting-style {
        .contact-menu:popover-open {
            display: flex;
            /* translate: calc(100% + var(--inset)) 0; */
        }
    }

    .section-title { 
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding-inline: var(--space-md);
        position: sticky;
        top: 0;
        z-index: 2;
        background: linear-gradient(180deg, var(--color-background) 80%, transparent);
        /* background-color: var(--color-background); */
        padding-block: var(--space-md);
    }

    .close-button {
        width: var(--icon-md);
        height: var(--icon-md);
    }

    .contact-form {
        overflow-y: auto;
        padding-inline: var(--space-md);
        flex: 1 0 auto;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: stretch;
        overflow: visible;
    }

    .submit-button {
        position: sticky;
        bottom: 0;
        background: linear-gradient(0deg, var(--color-background) 80%, transparent);
        padding-block: var(--space-md);
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        /* justify-content: flex-end; */
        z-index: 3;
        padding-inline: var(--space-md);
    }


</style>