---
import { Icon } from "astro-icon/components"
import AtomHubspotForm from "../atoms/atom-hubspotForm.astro"

const { hubspotFormId, forms } = Astro.props
---
<dialog popover id="contact-menu" class="contact-menu color-reset" data-lenis-prevent>
    <div class="section-title">
        <h2 class="h5">Contact</h2>
        <button popovertarget="contact-menu" class="contact-close-button button-reset">
            <Icon name="icon-x" class="close-button" />
        </button>
    </div>
    {forms.length > 1 &&
        <div class="tab-bar">
            <ul class="tabs">
                {forms.map((form, i) => (
                    <li class="tab" >
                        <button data-form-id={form.hubspotFormId} class="global-form-tab" data-active={i === 0 ? "true" : "false"}>{form.title}</button>
                    </li>
                ))}
            </ul>
        </div>
    }

    {forms.map((form, i) => (
        <div data-form-id={form.hubspotFormId} class="global-contact-form" data-active={i < 1 ? "true" : "false"}>
            <AtomHubspotForm
                formId={form.hubspotFormId}
                buttonToggles={true}
            />
        </div>
    ))}

</aside>

<script>
    const contactTabs = Array.from(document.getElementsByClassName('global-form-tab') as HTMLCollectionOf<HTMLElement>)
    const contactForms = Array.from(document.getElementsByClassName('global-contact-form') as HTMLCollectionOf<HTMLElement>)

    contactTabs.forEach((tab) => {
        tab.addEventListener("click", (e: Event) => {
            const element = e.target as HTMLButtonElement
            const tabId = element.dataset.formId
            contactForms.forEach((form) => {
                if (form.dataset.formId == tabId) return form.dataset.active = "true"
                return form.dataset.active = "false"
            })
            contactTabs.forEach((tab) => {
                if (tab.dataset.formId == tabId) return tab.dataset.active = "true"
                return tab.dataset.active = "false"
            })
        })
    })

</script>

<style>
    .contact-menu {
        --inset: var(--space-sm);
        border: none;
        margin: auto var(--inset) auto auto;
        height: calc(100% - var(--inset) * 2);
        background-color: var(--color-background);
        border-radius: var(--radius-sm);
        position: fixed;
        width: min(40rem, calc(100% - var(--inset) * 2));
        translate: calc(100% + var(--inset) + var(--page-margin)) 0;
        padding-inline: 0;
        padding-block: 0 var(--space-sm);
        z-index: 19;
        flex-direction: column;
        /* display: flex; */
        justify-content: space-between;
        gap: 0;
        /* opacity: 0; */
        /* gap: var(--space-sm); */
        transition: opacity var(--anim-md), translate var(--anim-md), display var(--anim-md) allow-discrete;
    }

    .contact-menu:popover-open {
        translate: 0 0;
        display: flex;
        /* opacity: 1; */
    }

    .contact-menu::backdrop {
        /* background-color: var(--color-glass-dark);
        backdrop-filter: var(--background-blur);
        -webkit-backdrop-filter: var(--background-blur); */
        background-color: var(--background-color-backdrop);
        backdrop-filter: var(--background-blur-backdrop);
        -webkit-backdrop-filter: var(--background-blur-backdrop);
        width: 100%;
        height: 100%;
        /* opacity: 0; */
        transition: opacity var(--anim-md), display var(--anim-md) allow-discrete;
    }


    @starting-style {
        .contact-menu:popover-open {
            display: flex;
            translate: calc(100% + var(--inset) + var(--page-margin)) 0;
            /* opacity: 0; */
            /* translate: calc(100% + var(--inset)) 0; */
        }
    }

    .section-title { 
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding-inline: var(--space-md);
        position: sticky;
        top: 0;
        z-index: 2;
        background: linear-gradient(180deg, var(--color-background) 80%, transparent);
        /* background-color: var(--color-background); */
        padding-block: var(--space-md);
    }

    .close-button {
        width: var(--icon-md);
        height: var(--icon-md);
    }

    .tab-bar {
        padding-inline: var(--space-md);
        margin-bottom: var(--space-xl);
    }

    .tabs {
        background-color: var(--color-background-secondary);
        display: flex;
        flex-direction: row;
        justify-content: stretch;
        margin: 0;
        padding: var(--space-2xs);
        list-style: none;
        border-radius: var(--radius-sm);
        gap: var(--space-2xs);
    }

    .tab {
        flex: 0 1 100%;
        margin: 0;
    }

    .tab button {
        width: 100%;
        padding: var(--space-2xs);
    }

    .tab:hover button {
        /* background-color: var(--color-foreground-secondary); */
        /* color: var(--color-background); */
        /* border: 1px solid var(--color-background); */
    }

    .tab button[data-active="true"] {
        background-color: var(--color-background);
    }

    .global-contact-form {
        overflow-y: auto;
        padding-inline: var(--space-md);
        flex: 1 0 auto;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: stretch;
        overflow: visible;
    }

    .global-contact-form :global(.form-field:has(input[type="submit"])) {
        position: sticky;
        bottom: 0;
        background: linear-gradient(0deg, var(--color-background) 80%, transparent);
        padding-block: var(--space-md) 0;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: flex-end;
        /* justify-content: flex-end; */
        z-index: 3;
    }

    .global-contact-form :global(input[type="submit"]) {
        align-self: flex-end;
    }

    .global-contact-form :global(form) {
        flex: 0 0 auto;
        min-height: 100%;
    }

    .global-contact-form[data-active="false"] {
        display: none;
    }


</style>