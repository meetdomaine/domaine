---
import { Icon } from "astro-icon/components"
import AtomHubspotForm from "../atoms/atom-hubspotForm.astro"

const { hubspotFormId, processConsentMessage, marketingConsentMessage } = Astro.props

const portalId = import.meta.env.HUBSPOT_PORTAL_ID

// const hubspotResponse = await fetch(`https://api.hubapi.com/marketing/v3/forms/${hubspotFormId}`, {
//     method: "GET",
//     headers: {
//         'Authorization': `Bearer ${import.meta.env.HUBSPOT_ACCESS_TOKEN}`,
//         "Content-type": "application/json; charset=UTF-8"
//     }
// })

// const formData = await hubspotResponse.json()

---
<dialog popover id="contact-menu" class="contact-menu color-reset" data-lenis-prevent>
    <div class="section-title">
        <h2 class="h5">Contact</h2>
        <button popovertarget="contact-menu" class="contact-close-button button-reset">
            <Icon name="pixel_x" class="close-button" />
        </button>
    </div>
    <div class="tab-bar">
        <ul class="tabs">
            <li class="tab" data-active="true"><button id="tab_project-inquiry" data-menu="project-inquiry">Project Inquiry</button></li>
            <li class="tab"><button id="tab_general-inquiry" data-menu="general-inquiry">Get in Touch</button></li>
        </ul>
    </div>

    <div class="contact-form">
        <AtomHubspotForm
            formId={hubspotFormId}
            buttonToggles={true}
        />
    </div>

    <div class="submit-button">
        <div class="custom-field">
            <input type="submit" value="Submit" form="contact-form" />
        </div>
    </div>
</aside>

<style>
    .contact-menu {
        --inset: var(--space-sm);
        border: none;
        margin: auto var(--inset) auto auto;
        height: calc(100% - var(--inset) * 2);
        max-width: 34rem;
        background-color: var(--color-background);
        border-radius: var(--radius-md);
        position: fixed;
        width: calc(100% - var(--inset) * 2);
        translate: calc(100% + var(--inset) + var(--page-margin)) 0;
        padding-inline: 0;
        padding-block: 0;
        z-index: 19;
        flex-direction: column;
        /* display: flex; */
        justify-content: space-between;
        gap: 0;
        opacity: 0;
        /* gap: var(--space-sm); */
        transition: opacity var(--anim-md), translate var(--anim-md), display var(--anim-md) allow-discrete;
    }

    .contact-menu:popover-open {
        translate: 0 0;
        display: flex;
        opacity: 1;
    }

    .contact-menu::backdrop {
        background-color: var(--color-glass-dark);
        backdrop-filter: var(--background-blur);
        -webkit-backdrop-filter: var(--background-blur);
        width: 100%;
        height: 100%;
        /* opacity: 0; */
        transition: opacity var(--anim-md), display var(--anim-md) allow-discrete;
    }


    @starting-style {
        .contact-menu:popover-open {
            display: flex;
            translate: calc(100% + var(--inset) + var(--page-margin)) 0;
            opacity: 0;
            /* translate: calc(100% + var(--inset)) 0; */
        }
    }

    .section-title { 
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding-inline: var(--space-md);
        position: sticky;
        top: 0;
        z-index: 2;
        background: linear-gradient(180deg, var(--color-background) 80%, transparent);
        /* background-color: var(--color-background); */
        padding-block: var(--space-md);
    }

    .close-button {
        width: var(--icon-md);
        height: var(--icon-md);
    }

    .tab-bar {
        padding-inline: var(--space-md);
        margin-bottom: var(--space-xl);
    }

    .tabs {
        background-color: var(--color-background-secondary);
        display: flex;
        flex-direction: row;
        justify-content: stretch;
        margin: 0;
        padding: var(--space-2xs);
        list-style: none;
        border-radius: var(--radius-sm);
        gap: var(--space-2xs);
    }

    .tab {
        flex: 0 1 100%;
    }

    .tab button {
        width: 100%;
        padding: var(--space-2xs);
    }

    .tab:hover button {
        /* background-color: var(--color-foreground-secondary); */
        /* color: var(--color-background); */
        /* border: 1px solid var(--color-background); */
    }

    .tab[data-active="true"] button {
        background-color: var(--color-background);
    }

    .contact-form {
        overflow-y: auto;
        padding-inline: var(--space-md);
        flex: 1 0 auto;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: stretch;
        overflow: visible;
    }

    .submit-button {
        position: sticky;
        bottom: 0;
        background: linear-gradient(0deg, var(--color-background) 80%, transparent);
        padding-block: var(--space-md);
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        /* justify-content: flex-end; */
        z-index: 3;
        padding-inline: var(--space-md);
    }


</style>