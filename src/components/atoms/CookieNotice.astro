---

---
<div id="cookie-notice" class="cookie-notice color-invert hidden">
    <p class="caption">This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our <a href="/privacy-policy">Privacy Policy</a></p>
    <div class="buttons">
        <a id="cookie-accept" class="button">Accept</a>
        <a id="cookie-decline" class="button button-secondary">Decline</a>
    </div>
</div>

<script>


        const cookieNotice = document.querySelector("#cookie-notice")
        const acceptButton = cookieNotice.querySelector("#cookie-accept")
        const declineButton = cookieNotice.querySelector("#cookie-decline")

        declare global {
            interface Window {
                gtag: any,
                dataLayer: any,
            }
        }

        window.dataLayer = window.dataLayer || [];

        const setConsent = (consent) => {
            const consentMode = {
                'ad_storage': consent.marketing ? 'granted' : 'denied',
                'ad_user_data': consent.marketing ? 'granted' : 'denied',
                'ad_personalization': consent.marketing ? 'granted' : 'denied',
                'analytics_storage': consent.analytics ? 'granted' : 'denied',
                'functionality_storage': consent.necessary ? 'granted' : 'denied',
                'personalization_storage': consent.preferences ? 'granted' : 'denied',
                'security_storage': consent.preferences ? 'granted' : 'denied',
            }
            window.gtag('consent', 'update', consentMode)
            window.dataLayer.push({ event: 'consentGranted' });
            localStorage.setItem('consentMode', JSON.stringify(consentMode))
        }

        const hideNotice = () => {
            cookieNotice.classList.add("hidden")
        }

        const handleAccept = () => {
            setConsent({
                necessary: true,
                analytics: true,
                marketing: true,
                preferences: false,
            })
            hideNotice()
        }

        const handleDecline = () => {
            setConsent({
                necessary: false,
                analytics: false,
                marketing: false,
                preferences: false,
            })
            hideNotice()
        }

        if (localStorage.getItem('consentMode') === null) {
            cookieNotice.classList.remove("hidden")
        }

        acceptButton.addEventListener("click", handleAccept)
        declineButton.addEventListener("click", handleDecline)

        // document.addEventListener("astro:page-load", () => {
        //     window.dataLayer.push({ event: 'astroPageLoad' });
        // })


</script>

<style>
    .cookie-notice {
        --margin: var(--space-sm);
        position: fixed;
        bottom: var(--margin);
        left: var(--margin);
        z-index: 999;
        background: var(--color-background);
        color: var(--color-foreground);
        border-radius: var(--radius-sm);
        max-width: min(25em, calc(100% - var(--margin) * 2));
        filter: drop-shadow(2px 2px 30px rgba(0, 0, 0, 0.2));
        padding: var(--space-sm);
        display: flex;
        flex-direction: column;
        /* align-items: flex-start; */
        gap: var(--space-md);
        opacity: 1;
        translate: 0 0;
        transition: opacity var(--anim-sm), translate var(--anim-sm);
    }

    .cookie-notice.hidden {
        opacity: 0;
        translate: 0 20px;
        pointer-events: none;
    }

    .buttons {
        display: flex;
        flex-direction: row;
        justify-content: stretch;
        gap: var(--space-2xs);
    }

    .buttons a {
        flex-grow: 1;
        justify-content: center;
    }
</style>