---
import AtomCounter from "../../../global/atoms/atom-counter.astro"
import { getServices_Domaine, getServiceTypes_Domaine } from "../../../global/utils/cms-content"

const { title, heading } = Astro.props
const serviceTypes = await getServiceTypes_Domaine()
const services = await getServices_Domaine()
const serviceCount = services.length
---
<section class="services-hero">
    <div class="section-title">
        <h1 class="h5">{title}</h1>
        <AtomCounter count={serviceCount} />
    </div>
    <div class="section-content">
        <!-- <p class="heading">{heading}</p> -->
        <div class="service-buttons">
            <span class="h6">{heading}</span>
                {serviceTypes.map((serviceType, i) => (
                    <span class="h6">
                        {i === serviceTypes.length - 1 ? "and" : ""}
                        <button class="serviceType-jumplink button-reset h6" data-slug={serviceType.slug.current}>{serviceType.title}</button>{i < serviceTypes.length - 2 ? "," : ""}{i === serviceTypes.length - 1 ? "." : ""}
                    </span>
                ))}
        </div>
    </div>
</section>

<script>
    import { gsap } from "../../../global/utils/gsap"
    const jumplinks = document.querySelectorAll('.serviceType-jumplink')

    jumplinks.forEach((button: HTMLButtonElement) => {
        button.addEventListener("click", () => gsap.to(window, { duration: 1, ease: 'cubic', scrollTo: { y: `#service-type-${button.dataset.slug}`, offsetY: 50 } } ))
    })
</script>

<style>
    .services-hero {
        padding-inline: var(--page-margin);
        padding-block: calc(var(--header-height) * 2) var(--space-lg);
        display: grid;
        grid-template-columns: var(--grid-template-default);
    }

    .section-title {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        gap: var(--space-2xs);
    }

    .section-content {
        display: flex;
        flex-direction: column;
        gap: var(--space-4xl);
    }

    .heading {
        max-width: 12em;
    }

    .service-buttons {
        max-width: 40em;
    }

    .service-buttons button {
        text-decoration: underline;
        text-transform: inherit;
        display: inline;
        /* padding: 0.2em 0.4em; */
    }

    @media screen and ( width <= 768px) {
        .services-hero {
            display: flex;
            flex-direction: column;
        }

        .section-content {
            gap: var(--space-xs);
        }

        .heading {
            max-width: unset;
        }
    }
</style>