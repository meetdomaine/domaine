---

import { urlFor } from "../../../utils/sanityClient";
import SanityImage from "../../atoms/SanityImage.astro";

const { content } = Astro.props;
// console.log(content.media)

---
<section data-inverted={content.invertTextColor ? "true" : "false"} class="media-slider" style={`background-color:${content.backgroundColor ? content.backgroundColor.hex : 'transparent'}`}>
  <div class="media">

    <div class="media-gallery-swiper" data-orientation={content.orientation == 'landscape' ? 'landscape' : 'portrait'}>
      <div class="swiper-wrapper">
        {content.media.map((media, i) => {
          
          if (media.videoURL) {

            return (

              <div class="swiper-slide">
                <video 
                  class="asset"
                  src={media.videoURL}
                  poster={urlFor(media.image).width(400).auto('format').url()}
                  loop
                  muted
                  autoplay
                  playsinline
                  onloadedmetadata="this.muted = true"
                />
              </div>
            )
          } else {
            return (
              <div class="swiper-slide">
                <SanityImage
                  image={media.image}
                  alt={media.image.alt}
                  sizes={content.orientation == 'landscape' ? '75vw' : '(max-width: 768px) 75vw, 28.5vw'}
                />
              </div>
            )
          }
        })}
      </div>
  </div>
  </div>
  { content.heading || content.description ? (
    <div class="content">
      {content.heading && <h2 class="heading" data-animate-viewport="true" data-animate-style="fade-up">{content.heading}</h2>}
      {content.description && <p class="description" data-animate-viewport="true" data-animate-style="fade-up" data-animate-delay="200">{content.description}</p>}
    </div>
  ): null }
</section>

<script>

  // import Swiper JS
  import Swiper from 'swiper';
  import { FreeMode, Mousewheel } from 'swiper/modules';

  // import Swiper styles
  import 'swiper/css';
  import 'swiper/css/free-mode';
  import 'swiper/css/mousewheel';
  import 'swiper/css/a11y';


  const initSlider = () => {

    const swiperElements = document.querySelectorAll('.media-gallery-swiper');

    // Handle clicks on each button.
    swiperElements.forEach((element: HTMLElement) => {

      const orientation = element.dataset.orientation

      const swiper = new Swiper(element, {
        spaceBetween: 100,
        // centeredSlides: true,
        slidesPerView: orientation == 'landscape' ? 1.5 : 3.5,
        // loop: true,
        grabCursor: true,
        freeMode: {
          enabled: true,
          sticky: true,
          momentumBounceRatio: 0.3,
          momentumRatio: 0.5,
          // momentumVelocityRatio: 1
        },
        mousewheel: {
          enabled: true,
          forceToAxis: true,
        },
        a11y: {
          enabled: true,
        },
        breakpoints: {
        // when window width is >= 320px
          320: {
            slidesPerView: 1.5,
            spaceBetween: 20
          },
          // when window width is >= 768px
          768: {
            slidesPerView: orientation == 'landscape' ? 1.5 : 3.5,
            spaceBetween: 100
          }
        },
        modules: [FreeMode, Mousewheel],

      });
    });

}

document.addEventListener("DOMContentLoaded", () => {
  initSlider()
})

// document.addEventListener("astro:page-load", () => {
//   initSlider()
// })

</script>

<style>

  .media-slider {
    padding: var(--space-2xl) var(--page-margin);
    display: flex;
    flex-direction: column;
    gap: var(--space-xl);
    overflow: hidden;
  }

  .media-slider[data-inverted="true"] {
    color: var(--color-reverse);
  }

  .media-gallery-swiper {
    /* max-height: 80svh; */
  }

  .swiper-slide {
    /* max-width: 80vw; */
    /* max-height: 60vh; */
    /* width: 30vw; */
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: var(--radius-lg);
    overflow: hidden;
  }

  .content {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: space-between;
    gap: var(--space-xs);
  }

  .heading {
    max-width: 20ch;
  }

  .description {
    max-width: 50ch;
  }

  @media screen and (max-width: 768px) {
    .content {
      flex-direction: column;
    }
  }
</style>