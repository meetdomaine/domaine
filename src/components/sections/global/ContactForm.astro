---
const { content, heading, text, hubspotFormId, key } = Astro.props;

const formId = hubspotFormId ? hubspotFormId : content.hubspotFormId
---
<section class="section_form" id="form-section">
  <div class="section_form-inner">
    <div class="section-title" data-animate-viewport="true" data-animate-style="fade-up">
      <h2 class="h2">{heading ? heading : content.heading}</h2>
      <p class="h6">{text ? text : content.subheading ? content.subheading : null}</p>
    </div>
    <div 
      id={`form-${formId}-${key}`} 
      class="hubspot-form"
      data-hubspot-form-id={formId}
      data-animate-viewport="true"
      data-animate-style="fade"
      data-animate-delay="200"
    ></div>
  </div>
</section>

<script define:vars={{ formId, key }}>

  const initForm = () => {
    const form = document.querySelector(`#form-${formId}-${key}`)

    if (form && window.hbspt) {

      window.hbspt.forms.create({
        region: "na1",
        target: `#form-${formId}-${key}`,
        portalId: "41750854",
        formId: form.dataset.hubspotFormId,
      });
      
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    initForm()
  })


</script>

<style>
  .section_form {
    padding: var(--header-height) var(--page-margin) var(--space-xl);
    overflow: hidden;
  }

  .section_form-inner {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    align-self: stretch;
    width: 100%;
    max-width: 120ch;
    margin: 0 auto;
    gap: var(--space-xl);
  }

  .section-title {
    max-width: 60ch;
    flex: 1 1 auto;
  }

  #form {
    min-width: min(40ch, 100%);
    flex: 1 1 50ch;
  }

  @media screen and (max-width: 768px) {

    .section_form-inner {
      flex-direction: column;
      justify-content: flex-start;
      align-items: stretch;
    }
    .section-title {
      max-width: unset;
    }

    #form {
      max-width: unset;
    }

  }
</style>